{"abi":[{"type":"function","name":"afterAllHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"afterHook","inputs":[{"name":"_terms","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"_delegationHash","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceCache","inputs":[{"name":"hashKey","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"beforeAllHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"beforeHook","inputs":[{"name":"_terms","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"_mode","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"_delegationHash","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getHashKey","inputs":[{"name":"_caller","type":"address","internalType":"address"},{"name":"_token","type":"address","internalType":"address"},{"name":"_recipient","type":"address","internalType":"address"},{"name":"_tokenId","type":"uint256","internalType":"uint256"},{"name":"_delegationHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"getTermsInfo","inputs":[{"name":"_terms","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"enforceDecrease_","type":"bool","internalType":"bool"},{"name":"token_","type":"address","internalType":"address"},{"name":"recipient_","type":"address","internalType":"address"},{"name":"tokenId_","type":"uint256","internalType":"uint256"},{"name":"amount_","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isLocked","inputs":[{"name":"hashKey","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"lock","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b506109cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b99deb0e1161005b578063b99deb0e14610122578063d0a3529f1461016b578063d3eddcc51461017e578063ed463367146100c557600080fd5b806332a16f4e1461008d578063414c3e33146100c5578063a145832a146100e1578063b5e54492146100f4575b600080fd5b6100b061009b3660046106cb565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100df6100d3366004610749565b50505050505050505050565b005b6100df6100ef366004610749565b610191565b6101146101023660046106cb565b60006020819052908152604090205481565b6040519081526020016100bc565b610135610130366004610816565b610350565b6040805195151586526001600160a01b03948516602087015292909316918401919091526060830152608082015260a0016100bc565b610114610179366004610858565b61045d565b6100df61018c366004610749565b610476565b85600881901b6101a2816000610661565b6102015760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b5060008060006102118e8e610350565b50935093509350506000610228338585858c610678565b60008181526001602052604090205490915060ff16156102a25760405162461bcd60e51b815260206004820152602f60248201527f4552433131353542616c616e63654368616e6765456e666f726365723a656e6660448201526e1bdc98d95c8b5a5ccb5b1bd8dad959608a1b60648201526084016101f8565b6000818152600160208190526040808320805460ff191690921790915551627eeac760e11b81526001600160a01b0385811660048301526024820185905286169062fdd58e90604401602060405180830381865afa158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c91906108ad565b60009283526020839052604090922091909155505050505050505050505050505050565b600080808080606986146103c05760405162461bcd60e51b815260206004820152603160248201527f4552433131353542616c616e63654368616e6765456e666f726365723a696e766044820152700c2d8d2c85ae8cae4dae65ad8cadccee8d607b1b60648201526084016101f8565b868660008181106103d3576103d36108c6565b909101356001600160f81b031916151595506103f5905060156001888a6108dc565b6103fe91610906565b60601c935061041160296015888a6108dc565b61041a91610906565b60601c925061042d60496029888a6108dc565b6104369161093b565b9150610445866049818a6108dc565b61044e9161093b565b60001c90509295509295909350565b600061046c8686868686610678565b9695505050505050565b60008060008060006104888f8f610350565b9450945094509450945060006104a1338686868d610678565b600081815260016020526040808220805460ff1916905551627eeac760e11b81526001600160a01b03878116600483015260248201879052929350909187169062fdd58e90604401602060405180830381865afa158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a91906108ad565b905086156105bf5760008281526020819052604090205461054c90849061096f565b8110156105ba5760405162461bcd60e51b815260206004820152603660248201527f4552433131353542616c616e63654368616e6765456e666f726365723a65786360448201527565656465642d62616c616e63652d646563726561736560501b60648201526084016101f8565b61064e565b6000828152602081905260409020546105d9908490610982565b81101561064e5760405162461bcd60e51b815260206004820152603a60248201527f4552433131353542616c616e63654368616e6765456e666f726365723a696e7360448201527f756666696369656e742d62616c616e63652d696e63726561736500000000000060648201526084016101f8565b5050505050505050505050505050505050565b6001600160f81b0319828116908216145b92915050565b604080516001600160a01b0396871660208083019190915295871681830152939095166060840152608083019190915260a0808301919091528351808303909101815260c0909101909252815191012090565b6000602082840312156106dd57600080fd5b5035919050565b60008083601f8401126106f657600080fd5b50813567ffffffffffffffff81111561070e57600080fd5b60208301915083602082850101111561072657600080fd5b9250929050565b80356001600160a01b038116811461074457600080fd5b919050565b60008060008060008060008060008060e08b8d03121561076857600080fd5b8a3567ffffffffffffffff8082111561078057600080fd5b61078c8e838f016106e4565b909c509a5060208d01359150808211156107a557600080fd5b6107b18e838f016106e4565b909a50985060408d0135975060608d01359150808211156107d157600080fd5b506107de8d828e016106e4565b90965094505060808b013592506107f760a08c0161072d565b915061080560c08c0161072d565b90509295989b9194979a5092959850565b6000806020838503121561082957600080fd5b823567ffffffffffffffff81111561084057600080fd5b61084c858286016106e4565b90969095509350505050565b600080600080600060a0868803121561087057600080fd5b6108798661072d565b94506108876020870161072d565b93506108956040870161072d565b94979396509394606081013594506080013592915050565b6000602082840312156108bf57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600080858511156108ec57600080fd5b838611156108f957600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156109335780818660140360031b1b83161692505b505092915050565b8035602083101561067257600019602084900360031b1b1692915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561067257610672610959565b808201808211156106725761067261095956fea264697066735822122095ab63871cc701b6845065f3118822a1bb1778b7d93ba045a40145ebc06f19af64736f6c63430008170033","sourceMap":"1399:5799:65:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063b99deb0e1161005b578063b99deb0e14610122578063d0a3529f1461016b578063d3eddcc51461017e578063ed463367146100c557600080fd5b806332a16f4e1461008d578063414c3e33146100c5578063a145832a146100e1578063b5e54492146100f4575b600080fd5b6100b061009b3660046106cb565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100df6100d3366004610749565b50505050505050505050565b005b6100df6100ef366004610749565b610191565b6101146101023660046106cb565b60006020819052908152604090205481565b6040519081526020016100bc565b610135610130366004610816565b610350565b6040805195151586526001600160a01b03948516602087015292909316918401919091526060830152608082015260a0016100bc565b610114610179366004610858565b61045d565b6100df61018c366004610749565b610476565b85600881901b6101a2816000610661565b6102015760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b5060008060006102118e8e610350565b50935093509350506000610228338585858c610678565b60008181526001602052604090205490915060ff16156102a25760405162461bcd60e51b815260206004820152602f60248201527f4552433131353542616c616e63654368616e6765456e666f726365723a656e6660448201526e1bdc98d95c8b5a5ccb5b1bd8dad959608a1b60648201526084016101f8565b6000818152600160208190526040808320805460ff191690921790915551627eeac760e11b81526001600160a01b0385811660048301526024820185905286169062fdd58e90604401602060405180830381865afa158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c91906108ad565b60009283526020839052604090922091909155505050505050505050505050505050565b600080808080606986146103c05760405162461bcd60e51b815260206004820152603160248201527f4552433131353542616c616e63654368616e6765456e666f726365723a696e766044820152700c2d8d2c85ae8cae4dae65ad8cadccee8d607b1b60648201526084016101f8565b868660008181106103d3576103d36108c6565b909101356001600160f81b031916151595506103f5905060156001888a6108dc565b6103fe91610906565b60601c935061041160296015888a6108dc565b61041a91610906565b60601c925061042d60496029888a6108dc565b6104369161093b565b9150610445866049818a6108dc565b61044e9161093b565b60001c90509295509295909350565b600061046c8686868686610678565b9695505050505050565b60008060008060006104888f8f610350565b9450945094509450945060006104a1338686868d610678565b600081815260016020526040808220805460ff1916905551627eeac760e11b81526001600160a01b03878116600483015260248201879052929350909187169062fdd58e90604401602060405180830381865afa158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a91906108ad565b905086156105bf5760008281526020819052604090205461054c90849061096f565b8110156105ba5760405162461bcd60e51b815260206004820152603660248201527f4552433131353542616c616e63654368616e6765456e666f726365723a65786360448201527565656465642d62616c616e63652d646563726561736560501b60648201526084016101f8565b61064e565b6000828152602081905260409020546105d9908490610982565b81101561064e5760405162461bcd60e51b815260206004820152603a60248201527f4552433131353542616c616e63654368616e6765456e666f726365723a696e7360448201527f756666696369656e742d62616c616e63652d696e63726561736500000000000060648201526084016101f8565b5050505050505050505050505050505050565b6001600160f81b0319828116908216145b92915050565b604080516001600160a01b0396871660208083019190915295871681830152939095166060840152608083019190915260a0808301919091528351808303909101815260c0909101909252815191012090565b6000602082840312156106dd57600080fd5b5035919050565b60008083601f8401126106f657600080fd5b50813567ffffffffffffffff81111561070e57600080fd5b60208301915083602082850101111561072657600080fd5b9250929050565b80356001600160a01b038116811461074457600080fd5b919050565b60008060008060008060008060008060e08b8d03121561076857600080fd5b8a3567ffffffffffffffff8082111561078057600080fd5b61078c8e838f016106e4565b909c509a5060208d01359150808211156107a557600080fd5b6107b18e838f016106e4565b909a50985060408d0135975060608d01359150808211156107d157600080fd5b506107de8d828e016106e4565b90965094505060808b013592506107f760a08c0161072d565b915061080560c08c0161072d565b90509295989b9194979a5092959850565b6000806020838503121561082957600080fd5b823567ffffffffffffffff81111561084057600080fd5b61084c858286016106e4565b90969095509350505050565b600080600080600060a0868803121561087057600080fd5b6108798661072d565b94506108876020870161072d565b93506108956040870161072d565b94979396509394606081013594506080013592915050565b6000602082840312156108bf57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600080858511156108ec57600080fd5b838611156108f957600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156109335780818660140360031b1b83161692505b505092915050565b8035602083101561067257600019602084900360031b1b1692915050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561067257610672610959565b808201808211156106725761067261095956fea264697066735822122095ab63871cc701b6845065f3118822a1bb1778b7d93ba045a40145ebc06f19af64736f6c63430008170033","sourceMap":"1399:5799:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;364:14:111;;357:22;339:41;;327:2;312:18;1603:53:65;;;;;;;;614:126:63;;;;;;:::i;:::-;;;;;;;;;;;;;;3321:712:65;;;;;;:::i;:::-;;:::i;1534:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2393:25:111;;;2381:2;2366:18;1534:63:65;2247:177:111;6134:534:65;;;;;;:::i;:::-;;:::i;:::-;;;;3121:14:111;;3114:22;3096:41;;-1:-1:-1;;;;;3211:15:111;;;3206:2;3191:18;;3184:43;3263:15;;;;3243:18;;;3236:43;;;;3310:2;3295:18;;3288:34;3353:3;3338:19;;3331:35;3083:3;3068:19;6134:534:65;2843:529:111;2247:313:65;;;;;;:::i;:::-;;:::i;4653:883::-;;;;;;:::i;:::-;;:::i;3321:712::-;3582:5;4155:1:16;4151:12;;;2014:29:63;4151:12:16;1954:18:63;2014:29;:::i;:::-;2006:79;;;;-1:-1:-1;;;2006:79:63;;4238:2:111;2006:79:63;;;4220:21:111;4277:2;4257:18;;;4250:30;4316:34;4296:18;;;4289:62;-1:-1:-1;;;4367:18:111;;;4360:35;4412:19;;2006:79:63;;;;;;;;;1937:159;3606:14:65::1;3622:18:::0;3642:16:::1;3663:20;3676:6;;3663:12;:20::i;:::-;3603:80;;;;;;;;3693:16;3712:70;3724:10;3736:6;3744:10;3756:8;3766:15;3712:11;:70::i;:::-;3801:18;::::0;;;:8:::1;:18;::::0;;;;;3693:89;;-1:-1:-1;3801:18:65::1;;3800:19;3792:79;;;::::0;-1:-1:-1;;;3792:79:65;;4644:2:111;3792:79:65::1;::::0;::::1;4626:21:111::0;4683:2;4663:18;;;4656:30;4722:34;4702:18;;;4695:62;-1:-1:-1;;;4773:18:111;;;4766:45;4828:19;;3792:79:65::1;4442:411:111::0;3792:79:65::1;3881:18;::::0;;;3902:4:::1;3881:18;::::0;;;;;;;:25;;-1:-1:-1;;3881:25:65::1;::::0;;::::1;::::0;;;3935:48;-1:-1:-1;;;3935:48:65;;-1:-1:-1;;;;;5050:32:111;;;3935:48:65::1;::::0;::::1;5032:51:111::0;5099:18;;;5092:34;;;3935:26:65;::::1;::::0;::::1;::::0;5005:18:111;;3935:48:65::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3993:12;:22:::0;;;::::1;::::0;;;;;;;:33;;;;-1:-1:-1;;;;;;;;;;;;;;;3321:712:65:o;6134:534::-;6224:21;;;;;6357:3;6340:20;;6332:82;;;;-1:-1:-1;;;6332:82:65;;5528:2:111;6332:82:65;;;5510:21:111;5567:2;5547:18;;;5540:30;5606:34;5586:18;;;5579:62;-1:-1:-1;;;5657:18:111;;;5650:47;5714:19;;6332:82:65;5326:413:111;6332:82:65;6443:6;;6450:1;6443:9;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;6443:9:65;:14;;;-1:-1:-1;6492:12:65;;-1:-1:-1;6501:2:65;6499:1;6492:6;;:12;:::i;:::-;6484:21;;;:::i;:::-;6476:30;;;-1:-1:-1;6545:13:65;6555:2;6552;6545:6;;:13;:::i;:::-;6537:22;;;:::i;:::-;6529:31;;;-1:-1:-1;6597:13:65;6607:2;6604;6597:6;;:13;:::i;:::-;6589:22;;;:::i;:::-;6581:31;-1:-1:-1;6648:11:65;:6;6655:2;6648:6;;:11;:::i;:::-;6640:20;;;:::i;:::-;6632:29;;6622:39;;6134:534;;;;;;;;:::o;2247:313::-;2456:7;2486:67;2498:7;2507:6;2515:10;2527:8;2537:15;2486:11;:67::i;:::-;2479:74;2247:313;-1:-1:-1;;;;;;2247:313:65:o;4653:883::-;4889:21;4912:14;4928:18;4948:16;4966:15;4985:20;4998:6;;4985:12;:20::i;:::-;4888:117;;;;;;;;;;5015:16;5034:70;5046:10;5058:6;5066:10;5078:8;5088:15;5034:11;:70::i;:::-;5121:18;;;;:8;:18;;;;;;5114:25;;-1:-1:-1;;5114:25:65;;;5168:48;-1:-1:-1;;;5168:48:65;;-1:-1:-1;;;;;5050:32:111;;;5168:48:65;;;5032:51:111;5099:18;;;5092:34;;;5121:18:65;;-1:-1:-1;5121:18:65;;5168:26;;;;;5005:18:111;;5168:48:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5149:67;;5230:16;5226:304;;;5282:12;:22;;;;;;;;;;;:32;;5307:7;;5282:32;:::i;:::-;5270:8;:44;;5262:111;;;;-1:-1:-1;;;5262:111:65;;7281:2:111;5262:111:65;;;7263:21:111;7320:2;7300:18;;;7293:30;7359:34;7339:18;;;7332:62;-1:-1:-1;;;7410:18:111;;;7403:52;7472:19;;5262:111:65;7079:418:111;5262:111:65;5226:304;;;5424:12;:22;;;;;;;;;;;:32;;5449:7;;5424:32;:::i;:::-;5412:8;:44;;5404:115;;;;-1:-1:-1;;;5404:115:65;;7834:2:111;5404:115:65;;;7816:21:111;7873:2;7853:18;;;7846:30;7912:34;7892:18;;;7885:62;7983:28;7963:18;;;7956:56;8029:19;;5404:115:65;7632:422:111;5404:115:65;4878:658;;;;;;;4653:883;;;;;;;;;;:::o;5426:120:16:-;-1:-1:-1;;;;;;5503:40:16;;;;;;;5426:120;;;;;:::o;6873:323:65:-;7122:66;;;-1:-1:-1;;;;;8374:15:111;;;7122:66:65;;;;8356:34:111;;;;8426:15;;;8406:18;;;8399:43;8478:15;;;;8458:18;;;8451:43;8510:18;;;8503:34;;;;8553:19;;;;8546:35;;;;7122:66:65;;;;;;;;;;8290:19:111;;;;7122:66:65;;;7112:77;;;;;;6873:323::o;14:180:111:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:111;;14:180;-1:-1:-1;14:180:111:o;391:347::-;442:8;452:6;506:3;499:4;491:6;487:17;483:27;473:55;;524:1;521;514:12;473:55;-1:-1:-1;547:20:111;;590:18;579:30;;576:50;;;622:1;619;612:12;576:50;659:4;651:6;647:17;635:29;;711:3;704:4;695:6;687;683:19;679:30;676:39;673:59;;;728:1;725;718:12;673:59;391:347;;;;;:::o;743:173::-;811:20;;-1:-1:-1;;;;;860:31:111;;850:42;;840:70;;906:1;903;896:12;840:70;743:173;;;:::o;921:1321::-;1096:6;1104;1112;1120;1128;1136;1144;1152;1160;1168;1221:3;1209:9;1200:7;1196:23;1192:33;1189:53;;;1238:1;1235;1228:12;1189:53;1278:9;1265:23;1307:18;1348:2;1340:6;1337:14;1334:34;;;1364:1;1361;1354:12;1334:34;1403:58;1453:7;1444:6;1433:9;1429:22;1403:58;:::i;:::-;1480:8;;-1:-1:-1;1377:84:111;-1:-1:-1;1568:2:111;1553:18;;1540:32;;-1:-1:-1;1584:16:111;;;1581:36;;;1613:1;1610;1603:12;1581:36;1652:60;1704:7;1693:8;1682:9;1678:24;1652:60;:::i;:::-;1731:8;;-1:-1:-1;1626:86:111;-1:-1:-1;1813:2:111;1798:18;;1785:32;;-1:-1:-1;1870:2:111;1855:18;;1842:32;;-1:-1:-1;1886:16:111;;;1883:36;;;1915:1;1912;1905:12;1883:36;;1954:60;2006:7;1995:8;1984:9;1980:24;1954:60;:::i;:::-;2033:8;;-1:-1:-1;1928:86:111;-1:-1:-1;;2115:3:111;2100:19;;2087:33;;-1:-1:-1;2139:39:111;2173:3;2158:19;;2139:39;:::i;:::-;2129:49;;2197:39;2231:3;2220:9;2216:19;2197:39;:::i;:::-;2187:49;;921:1321;;;;;;;;;;;;;:::o;2429:409::-;2499:6;2507;2560:2;2548:9;2539:7;2535:23;2531:32;2528:52;;;2576:1;2573;2566:12;2528:52;2616:9;2603:23;2649:18;2641:6;2638:30;2635:50;;;2681:1;2678;2671:12;2635:50;2720:58;2770:7;2761:6;2750:9;2746:22;2720:58;:::i;:::-;2797:8;;2694:84;;-1:-1:-1;2429:409:111;-1:-1:-1;;;;2429:409:111:o;3377:472::-;3472:6;3480;3488;3496;3504;3557:3;3545:9;3536:7;3532:23;3528:33;3525:53;;;3574:1;3571;3564:12;3525:53;3597:29;3616:9;3597:29;:::i;:::-;3587:39;;3645:38;3679:2;3668:9;3664:18;3645:38;:::i;:::-;3635:48;;3702:38;3736:2;3725:9;3721:18;3702:38;:::i;:::-;3377:472;;;;-1:-1:-1;3692:48:111;;3787:2;3772:18;;3759:32;;-1:-1:-1;3838:3:111;3823:19;3810:33;;3377:472;-1:-1:-1;;3377:472:111:o;5137:184::-;5207:6;5260:2;5248:9;5239:7;5235:23;5231:32;5228:52;;;5276:1;5273;5266:12;5228:52;-1:-1:-1;5299:16:111;;5137:184;-1:-1:-1;5137:184:111:o;5744:127::-;5805:10;5800:3;5796:20;5793:1;5786:31;5836:4;5833:1;5826:15;5860:4;5857:1;5850:15;5876:331;5981:9;5992;6034:8;6022:10;6019:24;6016:44;;;6056:1;6053;6046:12;6016:44;6085:6;6075:8;6072:20;6069:40;;;6105:1;6102;6095:12;6069:40;-1:-1:-1;;6131:23:111;;;6176:25;;;;;-1:-1:-1;5876:331:111:o;6212:337::-;-1:-1:-1;;6333:19:111;;6420:11;;;;6451:2;6443:11;;6440:103;;;6530:2;6524;6517:3;6513:2;6509:12;6506:1;6502:20;6498:29;6494:2;6490:38;6486:47;6477:56;;6440:103;;;6212:337;;;;:::o;6554:255::-;6674:19;;6713:2;6705:11;;6702:101;;;-1:-1:-1;;6774:2:111;6770:12;;;6767:1;6763:20;6759:33;6748:45;6554:255;;;;:::o;6814:127::-;6875:10;6870:3;6866:20;6863:1;6856:31;6906:4;6903:1;6896:15;6930:4;6927:1;6920:15;6946:128;7013:9;;;7034:11;;;7031:37;;;7048:18;;:::i;7502:125::-;7567:9;;;7588:10;;;7585:36;;;7601:18;;:::i","linkReferences":{}},"methodIdentifiers":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"ed463367","afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"d3eddcc5","balanceCache(bytes32)":"b5e54492","beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"414c3e33","beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"a145832a","getHashKey(address,address,address,uint256,bytes32)":"d0a3529f","getTermsInfo(bytes)":"b99deb0e","isLocked(bytes32)":"32a16f4e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"afterAllHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_terms\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_delegationHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"afterHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashKey\",\"type\":\"bytes32\"}],\"name\":\"balanceCache\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beforeAllHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_terms\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"_mode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_delegationHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beforeHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_delegationHash\",\"type\":\"bytes32\"}],\"name\":\"getHashKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_terms\",\"type\":\"bytes\"}],\"name\":\"getTermsInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enforceDecrease_\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashKey\",\"type\":\"bytes32\"}],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"lock\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract allows setting up some guardrails around balance changes. By specifying an amount and a direction (decrease/increase), one can enforce a maximum decrease or minimum increase in after-execution balance. The change can be either a decrease or increase based on the `enforceDecrease` flag.This contract has no enforcement of how the balance changes. It's meant to be used alongside additional enforcers to create granular permissions.This enforcer operates only in default execution mode.Security Notice: This enforcer tracks balance changes by comparing the recipient's balance before and after execution. Since enforcers watching the same recipient share state, a single balance modification may satisfy multiple enforcers simultaneously. Users should avoid tracking the same recipient's balance on multiple enforcers in a single delegation chain to prevent unintended behavior. Given its potential for concurrent condition fulfillment, use this enforcer at your own risk and ensure it aligns with your intended security model.\",\"kind\":\"dev\",\"methods\":{\"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"params\":{\"_delegationHash\":\"The hash of the delegation.\",\"_terms\":\"105 bytes where: - first byte: boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00) - next 20 bytes: address of the ERC1155 token - next 20 bytes: address of the recipient - next 32 bytes: token ID - next 32 bytes: balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)\"}},\"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"params\":{\"_delegationHash\":\"The hash of the delegation.\",\"_mode\":\"The execution mode. (Must be Default execType)\",\"_terms\":\"105 bytes where: - first byte: boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00) - next 20 bytes: address of the ERC1155 token - next 20 bytes: address of the recipient - next 32 bytes: token ID - next 32 bytes: balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)\"}},\"getHashKey(address,address,address,uint256,bytes32)\":{\"params\":{\"_caller\":\"Address of the sender calling the enforcer.\",\"_delegationHash\":\"The hash of the delegation.\",\"_recipient\":\"The address of the recipient of the token.\",\"_token\":\"ERC1155 token being compared in the beforeHook and afterHook.\",\"_tokenId\":\"The ID of the ERC1155 token.\"},\"returns\":{\"_0\":\"The hash to be used as key of the mapping.\"}},\"getTermsInfo(bytes)\":{\"params\":{\"_terms\":\"Encoded data that is used during the execution hooks.\"},\"returns\":{\"amount_\":\"Balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)\",\"enforceDecrease_\":\"Boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00).\",\"recipient_\":\"The address of the recipient of the token.\",\"tokenId_\":\"The ID of the ERC1155 token.\",\"token_\":\"The address of the ERC1155 token.\"}}},\"title\":\"ERC1155BalanceChangeEnforcer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions after all actions in a batch redemption process have been executed.\"},\"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"This function enforces that the recipient's ERC1155 token balance has changed by the expected amount.\"},\"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions before any actions in a batch redemption process begin.\"},\"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"This function caches the recipient's ERC1155 token balance before the delegation is executed.\"},\"getHashKey(address,address,address,uint256,bytes32)\":{\"notice\":\"Generates the key that identifies the run. Produced by the hash of the values used.\"},\"getTermsInfo(bytes)\":{\"notice\":\"Decodes the terms used in this CaveatEnforcer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/enforcers/ERC1155BalanceChangeEnforcer.sol\":\"ERC1155BalanceChangeEnforcer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@FCL/=lib/FCL/solidity/src/\",\":@SCL/=lib/SCL/src/\",\":@account-abstraction/=lib/account-abstraction/contracts/\",\":@bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":@erc7579/=lib/erc7579-implementation/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solidity-stringutils/=lib/solidity-stringutils/src/\",\":@solidity/=lib/SCL/src/\",\":FCL/=lib/FCL/solidity/src/\",\":SCL/=lib/SCL/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc7579-implementation/=lib/erc7579-implementation/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/\",\":solady/=lib/erc7579-implementation/node_modules/solady/src/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\"]},\"sources\":{\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/erc7579-implementation/src/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0x08368aba5f1bb83eb57e9f8d31a04edee4be69159b4844a6443f65100917011c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://789244f53fb8b25f4bacb8ac0b9c2f5ea2067a9c5c7bd13fd00e10618e52e2ff\",\"dweb:/ipfs/QmVSbGSyDpfL6UfyvaMBQHmV9u52wway1h3caJnvXVgkvn\"]},\"lib/erc7579-implementation/src/lib/ModeLib.sol\":{\"keccak256\":\"0x02ce0fc8805d1427841f32e2335157e3fae18e99d5c49ba46d53e12fcd1a5185\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9900d0dfb593b136a058a16f1817f60d5096c3eca6adea662381e12c241b14b4\",\"dweb:/ipfs/QmdsfLLtfzY9oEpZxk1Ve1PLuPQdphZcNK92L6mHa8n1h7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xb6503f663515b6713adb63eb2acf19401d8f73af39c7194f7dc3d8249c8643c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abdedc1b84ae26c1a151825e9f785fa8187ead91be438671fd18c7a41958b746\",\"dweb:/ipfs/QmdYFTdzQbrWJsJgH8mX1rPTt8V7DZFAXxjxNTaY6LEa6b\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"src/enforcers/CaveatEnforcer.sol\":{\"keccak256\":\"0xe6e44a3dfcb667fba89d7dc73ba06327add01a9ef4ecd11f3627d97e337041d5\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://79988dc7b56022300549c6ede1c7075fdcadb308191e0ece4f85f94f69036bb5\",\"dweb:/ipfs/QmRG1q4NFfo6RpoVWMdK3679eLg2fUru4dUESwCcmxzvoz\"]},\"src/enforcers/ERC1155BalanceChangeEnforcer.sol\":{\"keccak256\":\"0xb3c8cd73e37455e257f1114e9b36da287fdabf3ecc4fb998d2a14527ae40f8f8\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://0836f290933b2c881cb8ae90bf5f383ceec4f754debee6f1c6257e7d39cf2efd\",\"dweb:/ipfs/QmcgNMibBcrPjAkowwqhpcR7Fv4sRMspy9t9j4E6ZE8Kwe\"]},\"src/interfaces/ICaveatEnforcer.sol\":{\"keccak256\":\"0x61c2d69cb8cc4b04d5ce786ff1b38c07009a262b64900e58a109239942bfad16\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://a67f09f1229e703574dff9103daafa494e90e22577691f180ecfc2c3f50a3ecc\",\"dweb:/ipfs/QmVFXq8mx2PMkgMLoh3pTyQqkH9umwRUjKXtjeZscktf79\"]},\"src/utils/Constants.sol\":{\"keccak256\":\"0x5f1e2913a96b7f88bc7fbd2de329465822ae0d438ff212883c6dd3bd5e9609a5\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://51a750792520aaf10cb246112d5554bb33007edd8be97b78e90be9847d663978\",\"dweb:/ipfs/QmbQSZGNeG9f8DNVbCEo1SGRoJU4fQJwQfUHrzQNayFWNs\"]},\"src/utils/Types.sol\":{\"keccak256\":\"0xda4094eb4839087157f34750fb4d1a2d6241fbb8ee0d41fd1f2905209e6a05b0\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://1fab0d416245579b01d908ffb607f41ace7b103c1c6a3b9d0f8b32f29ac46247\",\"dweb:/ipfs/QmfDWFbdCEkvaKnPpZmDPtxYVBxHt2XA2zY9jon9Jm7pFf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"afterAllHook"},{"inputs":[{"internalType":"bytes","name":"_terms","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"_delegationHash","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"afterHook"},{"inputs":[{"internalType":"bytes32","name":"hashKey","type":"bytes32"}],"stateMutability":"view","type":"function","name":"balanceCache","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"beforeAllHook"},{"inputs":[{"internalType":"bytes","name":"_terms","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"_mode","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"_delegationHash","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"beforeHook"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"bytes32","name":"_delegationHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"getHashKey","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes","name":"_terms","type":"bytes"}],"stateMutability":"pure","type":"function","name":"getTermsInfo","outputs":[{"internalType":"bool","name":"enforceDecrease_","type":"bool"},{"internalType":"address","name":"token_","type":"address"},{"internalType":"address","name":"recipient_","type":"address"},{"internalType":"uint256","name":"tokenId_","type":"uint256"},{"internalType":"uint256","name":"amount_","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"hashKey","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isLocked","outputs":[{"internalType":"bool","name":"lock","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"params":{"_delegationHash":"The hash of the delegation.","_terms":"105 bytes where: - first byte: boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00) - next 20 bytes: address of the ERC1155 token - next 20 bytes: address of the recipient - next 32 bytes: token ID - next 32 bytes: balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)"}},"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"params":{"_delegationHash":"The hash of the delegation.","_mode":"The execution mode. (Must be Default execType)","_terms":"105 bytes where: - first byte: boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00) - next 20 bytes: address of the ERC1155 token - next 20 bytes: address of the recipient - next 32 bytes: token ID - next 32 bytes: balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)"}},"getHashKey(address,address,address,uint256,bytes32)":{"params":{"_caller":"Address of the sender calling the enforcer.","_delegationHash":"The hash of the delegation.","_recipient":"The address of the recipient of the token.","_token":"ERC1155 token being compared in the beforeHook and afterHook.","_tokenId":"The ID of the ERC1155 token."},"returns":{"_0":"The hash to be used as key of the mapping."}},"getTermsInfo(bytes)":{"params":{"_terms":"Encoded data that is used during the execution hooks."},"returns":{"amount_":"Balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)","enforceDecrease_":"Boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00).","recipient_":"The address of the recipient of the token.","tokenId_":"The ID of the ERC1155 token.","token_":"The address of the ERC1155 token."}}},"version":1},"userdoc":{"kind":"user","methods":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions after all actions in a batch redemption process have been executed."},"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"This function enforces that the recipient's ERC1155 token balance has changed by the expected amount."},"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions before any actions in a batch redemption process begin."},"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"This function caches the recipient's ERC1155 token balance before the delegation is executed."},"getHashKey(address,address,address,uint256,bytes32)":{"notice":"Generates the key that identifies the run. Produced by the hash of the values used."},"getTermsInfo(bytes)":{"notice":"Decodes the terms used in this CaveatEnforcer."}},"version":1}},"settings":{"remappings":["@FCL/=lib/FCL/solidity/src/","@SCL/=lib/SCL/src/","@account-abstraction/=lib/account-abstraction/contracts/","@bytes-utils/=lib/solidity-bytes-utils/contracts/","@erc7579/=lib/erc7579-implementation/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@solidity-stringutils/=lib/solidity-stringutils/src/","@solidity/=lib/SCL/src/","FCL/=lib/FCL/solidity/src/","SCL/=lib/SCL/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","erc7579-implementation/=lib/erc7579-implementation/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/","solady/=lib/erc7579-implementation/node_modules/solady/src/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-stringutils/=lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/enforcers/ERC1155BalanceChangeEnforcer.sol":"ERC1155BalanceChangeEnforcer"},"evmVersion":"london","libraries":{}},"sources":{"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"lib/erc7579-implementation/src/interfaces/IERC7579Account.sol":{"keccak256":"0x08368aba5f1bb83eb57e9f8d31a04edee4be69159b4844a6443f65100917011c","urls":["bzz-raw://789244f53fb8b25f4bacb8ac0b9c2f5ea2067a9c5c7bd13fd00e10618e52e2ff","dweb:/ipfs/QmVSbGSyDpfL6UfyvaMBQHmV9u52wway1h3caJnvXVgkvn"],"license":"MIT"},"lib/erc7579-implementation/src/lib/ModeLib.sol":{"keccak256":"0x02ce0fc8805d1427841f32e2335157e3fae18e99d5c49ba46d53e12fcd1a5185","urls":["bzz-raw://9900d0dfb593b136a058a16f1817f60d5096c3eca6adea662381e12c241b14b4","dweb:/ipfs/QmdsfLLtfzY9oEpZxk1Ve1PLuPQdphZcNK92L6mHa8n1h7"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol":{"keccak256":"0xb6503f663515b6713adb63eb2acf19401d8f73af39c7194f7dc3d8249c8643c7","urls":["bzz-raw://abdedc1b84ae26c1a151825e9f785fa8187ead91be438671fd18c7a41958b746","dweb:/ipfs/QmdYFTdzQbrWJsJgH8mX1rPTt8V7DZFAXxjxNTaY6LEa6b"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c","urls":["bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e","dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"],"license":"MIT"},"src/enforcers/CaveatEnforcer.sol":{"keccak256":"0xe6e44a3dfcb667fba89d7dc73ba06327add01a9ef4ecd11f3627d97e337041d5","urls":["bzz-raw://79988dc7b56022300549c6ede1c7075fdcadb308191e0ece4f85f94f69036bb5","dweb:/ipfs/QmRG1q4NFfo6RpoVWMdK3679eLg2fUru4dUESwCcmxzvoz"],"license":"MIT AND Apache-2.0"},"src/enforcers/ERC1155BalanceChangeEnforcer.sol":{"keccak256":"0xb3c8cd73e37455e257f1114e9b36da287fdabf3ecc4fb998d2a14527ae40f8f8","urls":["bzz-raw://0836f290933b2c881cb8ae90bf5f383ceec4f754debee6f1c6257e7d39cf2efd","dweb:/ipfs/QmcgNMibBcrPjAkowwqhpcR7Fv4sRMspy9t9j4E6ZE8Kwe"],"license":"MIT AND Apache-2.0"},"src/interfaces/ICaveatEnforcer.sol":{"keccak256":"0x61c2d69cb8cc4b04d5ce786ff1b38c07009a262b64900e58a109239942bfad16","urls":["bzz-raw://a67f09f1229e703574dff9103daafa494e90e22577691f180ecfc2c3f50a3ecc","dweb:/ipfs/QmVFXq8mx2PMkgMLoh3pTyQqkH9umwRUjKXtjeZscktf79"],"license":"MIT AND Apache-2.0"},"src/utils/Constants.sol":{"keccak256":"0x5f1e2913a96b7f88bc7fbd2de329465822ae0d438ff212883c6dd3bd5e9609a5","urls":["bzz-raw://51a750792520aaf10cb246112d5554bb33007edd8be97b78e90be9847d663978","dweb:/ipfs/QmbQSZGNeG9f8DNVbCEo1SGRoJU4fQJwQfUHrzQNayFWNs"],"license":"MIT AND Apache-2.0"},"src/utils/Types.sol":{"keccak256":"0xda4094eb4839087157f34750fb4d1a2d6241fbb8ee0d41fd1f2905209e6a05b0","urls":["bzz-raw://1fab0d416245579b01d908ffb607f41ace7b103c1c6a3b9d0f8b32f29ac46247","dweb:/ipfs/QmfDWFbdCEkvaKnPpZmDPtxYVBxHt2XA2zY9jon9Jm7pFf"],"license":"MIT AND Apache-2.0"}},"version":1},"id":65}