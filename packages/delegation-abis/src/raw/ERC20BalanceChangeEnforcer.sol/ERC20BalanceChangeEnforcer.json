{"abi":[{"type":"function","name":"afterAllHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"afterHook","inputs":[{"name":"_terms","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"_delegationHash","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceCache","inputs":[{"name":"hashKey","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"beforeAllHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"beforeHook","inputs":[{"name":"_terms","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"_mode","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"_delegationHash","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getHashKey","inputs":[{"name":"_caller","type":"address","internalType":"address"},{"name":"_token","type":"address","internalType":"address"},{"name":"_delegationHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"getTermsInfo","inputs":[{"name":"_terms","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"enforceDecrease_","type":"bool","internalType":"bool"},{"name":"token_","type":"address","internalType":"address"},{"name":"recipient_","type":"address","internalType":"address"},{"name":"amount_","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isLocked","inputs":[{"name":"hashKey","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"lock","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b5061095e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b5e544921161005b578063b5e5449214610115578063b99deb0e14610135578063d3eddcc51461017a578063ed463367146100c557600080fd5b806332a16f4e1461008d578063414c3e33146100c55780638678d6ef146100e1578063a145832a14610102575b600080fd5b6100b061009b366004610677565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100df6100d33660046106f5565b50505050505050505050565b005b6100f46100ef3660046107c2565b61018d565b6040519081526020016100bc565b6100df6101103660046106f5565b6101a2565b6100f4610123366004610677565b60006020819052908152604090205481565b6101486101433660046107fe565b610353565b6040516100bc949392919093151584526001600160a01b03928316602085015291166040830152606082015260800190565b6100df6101883660046106f5565b610440565b600061019a84848461061d565b949350505050565b85600881901b6101b3816000610660565b6102125760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b506000806102208d8d610353565b509250925050600061023333848961061d565b60008181526001602052604090205490915060ff16156102ab5760405162461bcd60e51b815260206004820152602d60248201527f455243323042616c616e63654368616e6765456e666f726365723a656e666f7260448201526c18d95c8b5a5ccb5b1bd8dad959609a1b6064820152608401610209565b6000818152600160208190526040808320805460ff1916909217909155516370a0823160e01b81526001600160a01b0384811660048301528516906370a0823190602401602060405180830381865afa15801561030c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103309190610840565b600092835260208390526040909220919091555050505050505050505050505050565b6000808080604985146103c05760405162461bcd60e51b815260206004820152602f60248201527f455243323042616c616e63654368616e6765456e666f726365723a696e76616c60448201526e0d2c85ae8cae4dae65ad8cadccee8d608b1b6064820152608401610209565b858560008181106103d3576103d3610859565b909101356001600160f81b031916151594506103f5905060156001878961086f565b6103fe91610899565b60601c925061041160296015878961086f565b61041a91610899565b60601c915061042c856029818961086f565b610435916108ce565b939692955090935050565b6000806000806104508e8e610353565b9350935093509350600061046533858a61061d565b600081815260016020526040808220805460ff19169055516370a0823160e01b81526001600160a01b03868116600483015292935090918616906370a0823190602401602060405180830381865afa1580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e99190610840565b9050851561057c5760008281526020819052604090205461050b908490610902565b8110156105775760405162461bcd60e51b815260206004820152603460248201527f455243323042616c616e63654368616e6765456e666f726365723a65786365656044820152736465642d62616c616e63652d646563726561736560601b6064820152608401610209565b61060b565b600082815260208190526040902054610596908490610915565b81101561060b5760405162461bcd60e51b815260206004820152603860248201527f455243323042616c616e63654368616e6765456e666f726365723a696e73756660448201527f66696369656e742d62616c616e63652d696e63726561736500000000000000006064820152608401610209565b50505050505050505050505050505050565b604080516001600160a01b039485166020808301919091529390941684820152606080850192909252805180850390920182526080909301909252815191012090565b6001600160f81b0319828116908216145b92915050565b60006020828403121561068957600080fd5b5035919050565b60008083601f8401126106a257600080fd5b50813567ffffffffffffffff8111156106ba57600080fd5b6020830191508360208285010111156106d257600080fd5b9250929050565b80356001600160a01b03811681146106f057600080fd5b919050565b60008060008060008060008060008060e08b8d03121561071457600080fd5b8a3567ffffffffffffffff8082111561072c57600080fd5b6107388e838f01610690565b909c509a5060208d013591508082111561075157600080fd5b61075d8e838f01610690565b909a50985060408d0135975060608d013591508082111561077d57600080fd5b5061078a8d828e01610690565b90965094505060808b013592506107a360a08c016106d9565b91506107b160c08c016106d9565b90509295989b9194979a5092959850565b6000806000606084860312156107d757600080fd5b6107e0846106d9565b92506107ee602085016106d9565b9150604084013590509250925092565b6000806020838503121561081157600080fd5b823567ffffffffffffffff81111561082857600080fd5b61083485828601610690565b90969095509350505050565b60006020828403121561085257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000808585111561087f57600080fd5b8386111561088c57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156108c65780818660140360031b1b83161692505b505092915050565b8035602083101561067157600019602084900360031b1b1692915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610671576106716108ec565b80820180821115610671576106716108ec56fea26469706673582212202ee065285e6d78b8f4f72189bef225cff106ed6fed2f250af767e847d4faa24364736f6c63430008170033","sourceMap":"1391:4940:66:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063b5e544921161005b578063b5e5449214610115578063b99deb0e14610135578063d3eddcc51461017a578063ed463367146100c557600080fd5b806332a16f4e1461008d578063414c3e33146100c55780638678d6ef146100e1578063a145832a14610102575b600080fd5b6100b061009b366004610677565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100df6100d33660046106f5565b50505050505050505050565b005b6100f46100ef3660046107c2565b61018d565b6040519081526020016100bc565b6100df6101103660046106f5565b6101a2565b6100f4610123366004610677565b60006020819052908152604090205481565b6101486101433660046107fe565b610353565b6040516100bc949392919093151584526001600160a01b03928316602085015291166040830152606082015260800190565b6100df6101883660046106f5565b610440565b600061019a84848461061d565b949350505050565b85600881901b6101b3816000610660565b6102125760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b506000806102208d8d610353565b509250925050600061023333848961061d565b60008181526001602052604090205490915060ff16156102ab5760405162461bcd60e51b815260206004820152602d60248201527f455243323042616c616e63654368616e6765456e666f726365723a656e666f7260448201526c18d95c8b5a5ccb5b1bd8dad959609a1b6064820152608401610209565b6000818152600160208190526040808320805460ff1916909217909155516370a0823160e01b81526001600160a01b0384811660048301528516906370a0823190602401602060405180830381865afa15801561030c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103309190610840565b600092835260208390526040909220919091555050505050505050505050505050565b6000808080604985146103c05760405162461bcd60e51b815260206004820152602f60248201527f455243323042616c616e63654368616e6765456e666f726365723a696e76616c60448201526e0d2c85ae8cae4dae65ad8cadccee8d608b1b6064820152608401610209565b858560008181106103d3576103d3610859565b909101356001600160f81b031916151594506103f5905060156001878961086f565b6103fe91610899565b60601c925061041160296015878961086f565b61041a91610899565b60601c915061042c856029818961086f565b610435916108ce565b939692955090935050565b6000806000806104508e8e610353565b9350935093509350600061046533858a61061d565b600081815260016020526040808220805460ff19169055516370a0823160e01b81526001600160a01b03868116600483015292935090918616906370a0823190602401602060405180830381865afa1580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e99190610840565b9050851561057c5760008281526020819052604090205461050b908490610902565b8110156105775760405162461bcd60e51b815260206004820152603460248201527f455243323042616c616e63654368616e6765456e666f726365723a65786365656044820152736465642d62616c616e63652d646563726561736560601b6064820152608401610209565b61060b565b600082815260208190526040902054610596908490610915565b81101561060b5760405162461bcd60e51b815260206004820152603860248201527f455243323042616c616e63654368616e6765456e666f726365723a696e73756660448201527f66696369656e742d62616c616e63652d696e63726561736500000000000000006064820152608401610209565b50505050505050505050505050505050565b604080516001600160a01b039485166020808301919091529390941684820152606080850192909252805180850390920182526080909301909252815191012090565b6001600160f81b0319828116908216145b92915050565b60006020828403121561068957600080fd5b5035919050565b60008083601f8401126106a257600080fd5b50813567ffffffffffffffff8111156106ba57600080fd5b6020830191508360208285010111156106d257600080fd5b9250929050565b80356001600160a01b03811681146106f057600080fd5b919050565b60008060008060008060008060008060e08b8d03121561071457600080fd5b8a3567ffffffffffffffff8082111561072c57600080fd5b6107388e838f01610690565b909c509a5060208d013591508082111561075157600080fd5b61075d8e838f01610690565b909a50985060408d0135975060608d013591508082111561077d57600080fd5b5061078a8d828e01610690565b90965094505060808b013592506107a360a08c016106d9565b91506107b160c08c016106d9565b90509295989b9194979a5092959850565b6000806000606084860312156107d757600080fd5b6107e0846106d9565b92506107ee602085016106d9565b9150604084013590509250925092565b6000806020838503121561081157600080fd5b823567ffffffffffffffff81111561082857600080fd5b61083485828601610690565b90969095509350505050565b60006020828403121561085257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000808585111561087f57600080fd5b8386111561088c57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156108c65780818660140360031b1b83161692505b505092915050565b8035602083101561067157600019602084900360031b1b1692915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610671576106716108ec565b80820180821115610671576106716108ec56fea26469706673582212202ee065285e6d78b8f4f72189bef225cff106ed6fed2f250af767e847d4faa24364736f6c63430008170033","sourceMap":"1391:4940:66:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1593:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;364:14:111;;357:22;339:41;;327:2;312:18;1593:53:66;;;;;;;;614:126:63;;;;;;:::i;:::-;;;;;;;;;;;;;;2109:179:66;;;;;;:::i;:::-;;:::i;:::-;;;2726:25:111;;;2714:2;2699:18;2109:179:66;2580:177:111;2947:658:66;;;;;;:::i;:::-;;:::i;1524:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;5474:461;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;3608:14:111;;3601:22;3583:41;;-1:-1:-1;;;;;3698:15:111;;;3693:2;3678:18;;3671:43;3750:15;;3745:2;3730:18;;3723:43;3797:2;3782:18;;3775:34;3570:3;3555:19;;3358:457;4123:827:66;;;;;;:::i;:::-;;:::i;2109:179::-;2210:7;2236:45;2248:7;2257:6;2265:15;2236:11;:45::i;:::-;2229:52;2109:179;-1:-1:-1;;;;2109:179:66:o;2947:658::-;3208:5;4155:1:16;4151:12;;;2014:29:63;4151:12:16;1954:18:63;2014:29;:::i;:::-;2006:79;;;;-1:-1:-1;;;2006:79:63;;4022:2:111;2006:79:63;;;4004:21:111;4061:2;4041:18;;;4034:30;4100:34;4080:18;;;4073:62;-1:-1:-1;;;4151:18:111;;;4144:35;4196:19;;2006:79:63;;;;;;;;;1937:159;3232:14:66::1;3248:18:::0;3271:20:::1;3284:6;;3271:12;:20::i;:::-;3229:62;;;;;;3301:16;3320:48;3332:10;3344:6;3352:15;3320:11;:48::i;:::-;3387:18;::::0;;;:8:::1;:18;::::0;;;;;3301:67;;-1:-1:-1;3387:18:66::1;;3386:19;3378:77;;;::::0;-1:-1:-1;;;3378:77:66;;4428:2:111;3378:77:66::1;::::0;::::1;4410:21:111::0;4467:2;4447:18;;;4440:30;4506:34;4486:18;;;4479:62;-1:-1:-1;;;4557:18:111;;;4550:43;4610:19;;3378:77:66::1;4226:409:111::0;3378:77:66::1;3465:18;::::0;;;3486:4:::1;3465:18;::::0;;;;;;;:25;;-1:-1:-1;;3465:25:66::1;::::0;;::::1;::::0;;;3519:36;-1:-1:-1;;;3519:36:66;;-1:-1:-1;;;;;4804:32:111;;;3519:36:66::1;::::0;::::1;4786:51:111::0;3519:24:66;::::1;::::0;::::1;::::0;4759:18:111;;3519:36:66::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3565:12;:22:::0;;;::::1;::::0;;;;;;;:33;;;;-1:-1:-1;;;;;;;;;;;;;;2947:658:66:o;5474:461::-;5564:21;;;;5679:2;5662:19;;5654:79;;;;-1:-1:-1;;;5654:79:66;;5239:2:111;5654:79:66;;;5221:21:111;5278:2;5258:18;;;5251:30;5317:34;5297:18;;;5290:62;-1:-1:-1;;;5368:18:111;;;5361:45;5423:19;;5654:79:66;5037:411:111;5654:79:66;5762:6;;5769:1;5762:9;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;5762:9:66;:14;;;-1:-1:-1;5811:12:66;;-1:-1:-1;5820:2:66;5818:1;5811:6;;:12;:::i;:::-;5803:21;;;:::i;:::-;5795:30;;;-1:-1:-1;5864:13:66;5874:2;5871;5864:6;;:13;:::i;:::-;5856:22;;;:::i;:::-;5848:31;;;-1:-1:-1;5915:11:66;:6;5922:2;5915:6;;:11;:::i;:::-;5907:20;;;:::i;:::-;5474:461;;;;-1:-1:-1;5474:461:66;;-1:-1:-1;;5474:461:66:o;4123:827::-;4359:21;4382:14;4398:18;4418:15;4437:20;4450:6;;4437:12;:20::i;:::-;4358:99;;;;;;;;4467:16;4486:48;4498:10;4510:6;4518:15;4486:11;:48::i;:::-;4551:18;;;;:8;:18;;;;;;4544:25;;-1:-1:-1;;4544:25:66;;;4598:36;-1:-1:-1;;;4598:36:66;;-1:-1:-1;;;;;4804:32:111;;;4598:36:66;;;4786:51:111;4551:18:66;;-1:-1:-1;4551:18:66;;4598:24;;;;;4759:18:111;;4598:36:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4579:55;;4648:16;4644:300;;;4700:12;:22;;;;;;;;;;;:32;;4725:7;;4700:32;:::i;:::-;4688:8;:44;;4680:109;;;;-1:-1:-1;;;4680:109:66;;6990:2:111;4680:109:66;;;6972:21:111;7029:2;7009:18;;;7002:30;7068:34;7048:18;;;7041:62;-1:-1:-1;;;7119:18:111;;;7112:50;7179:19;;4680:109:66;6788:416:111;4680:109:66;4644:300;;;4840:12;:22;;;;;;;;;;;:32;;4865:7;;4840:32;:::i;:::-;4828:8;:44;;4820:113;;;;-1:-1:-1;;;4820:113:66;;7541:2:111;4820:113:66;;;7523:21:111;7580:2;7560:18;;;7553:30;7619:34;7599:18;;;7592:62;7690:26;7670:18;;;7663:54;7734:19;;4820:113:66;7339:420:111;4820:113:66;4348:602;;;;;;4123:827;;;;;;;;;;:::o;6140:189::-;6277:44;;;-1:-1:-1;;;;;8022:15:111;;;6277:44:66;;;;8004:34:111;;;;8074:15;;;;8054:18;;;8047:43;8106:18;;;;8099:34;;;;6277:44:66;;;;;;;;;;7939:18:111;;;;6277:44:66;;;6267:55;;;;;;6140:189::o;5426:120:16:-;-1:-1:-1;;;;;;5503:40:16;;;;;;;5426:120;;;;;:::o;14:180:111:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:111;;14:180;-1:-1:-1;14:180:111:o;391:347::-;442:8;452:6;506:3;499:4;491:6;487:17;483:27;473:55;;524:1;521;514:12;473:55;-1:-1:-1;547:20:111;;590:18;579:30;;576:50;;;622:1;619;612:12;576:50;659:4;651:6;647:17;635:29;;711:3;704:4;695:6;687;683:19;679:30;676:39;673:59;;;728:1;725;718:12;673:59;391:347;;;;;:::o;743:173::-;811:20;;-1:-1:-1;;;;;860:31:111;;850:42;;840:70;;906:1;903;896:12;840:70;743:173;;;:::o;921:1321::-;1096:6;1104;1112;1120;1128;1136;1144;1152;1160;1168;1221:3;1209:9;1200:7;1196:23;1192:33;1189:53;;;1238:1;1235;1228:12;1189:53;1278:9;1265:23;1307:18;1348:2;1340:6;1337:14;1334:34;;;1364:1;1361;1354:12;1334:34;1403:58;1453:7;1444:6;1433:9;1429:22;1403:58;:::i;:::-;1480:8;;-1:-1:-1;1377:84:111;-1:-1:-1;1568:2:111;1553:18;;1540:32;;-1:-1:-1;1584:16:111;;;1581:36;;;1613:1;1610;1603:12;1581:36;1652:60;1704:7;1693:8;1682:9;1678:24;1652:60;:::i;:::-;1731:8;;-1:-1:-1;1626:86:111;-1:-1:-1;1813:2:111;1798:18;;1785:32;;-1:-1:-1;1870:2:111;1855:18;;1842:32;;-1:-1:-1;1886:16:111;;;1883:36;;;1915:1;1912;1905:12;1883:36;;1954:60;2006:7;1995:8;1984:9;1980:24;1954:60;:::i;:::-;2033:8;;-1:-1:-1;1928:86:111;-1:-1:-1;;2115:3:111;2100:19;;2087:33;;-1:-1:-1;2139:39:111;2173:3;2158:19;;2139:39;:::i;:::-;2129:49;;2197:39;2231:3;2220:9;2216:19;2197:39;:::i;:::-;2187:49;;921:1321;;;;;;;;;;;;;:::o;2247:328::-;2324:6;2332;2340;2393:2;2381:9;2372:7;2368:23;2364:32;2361:52;;;2409:1;2406;2399:12;2361:52;2432:29;2451:9;2432:29;:::i;:::-;2422:39;;2480:38;2514:2;2503:9;2499:18;2480:38;:::i;:::-;2470:48;;2565:2;2554:9;2550:18;2537:32;2527:42;;2247:328;;;;;:::o;2944:409::-;3014:6;3022;3075:2;3063:9;3054:7;3050:23;3046:32;3043:52;;;3091:1;3088;3081:12;3043:52;3131:9;3118:23;3164:18;3156:6;3153:30;3150:50;;;3196:1;3193;3186:12;3150:50;3235:58;3285:7;3276:6;3265:9;3261:22;3235:58;:::i;:::-;3312:8;;3209:84;;-1:-1:-1;2944:409:111;-1:-1:-1;;;;2944:409:111:o;4848:184::-;4918:6;4971:2;4959:9;4950:7;4946:23;4942:32;4939:52;;;4987:1;4984;4977:12;4939:52;-1:-1:-1;5010:16:111;;4848:184;-1:-1:-1;4848:184:111:o;5453:127::-;5514:10;5509:3;5505:20;5502:1;5495:31;5545:4;5542:1;5535:15;5569:4;5566:1;5559:15;5585:331;5690:9;5701;5743:8;5731:10;5728:24;5725:44;;;5765:1;5762;5755:12;5725:44;5794:6;5784:8;5781:20;5778:40;;;5814:1;5811;5804:12;5778:40;-1:-1:-1;;5840:23:111;;;5885:25;;;;;-1:-1:-1;5585:331:111:o;5921:337::-;-1:-1:-1;;6042:19:111;;6129:11;;;;6160:2;6152:11;;6149:103;;;6239:2;6233;6226:3;6222:2;6218:12;6215:1;6211:20;6207:29;6203:2;6199:38;6195:47;6186:56;;6149:103;;;5921:337;;;;:::o;6263:255::-;6383:19;;6422:2;6414:11;;6411:101;;;-1:-1:-1;;6483:2:111;6479:12;;;6476:1;6472:20;6468:33;6457:45;6263:255;;;;:::o;6523:127::-;6584:10;6579:3;6575:20;6572:1;6565:31;6615:4;6612:1;6605:15;6639:4;6636:1;6629:15;6655:128;6722:9;;;6743:11;;;6740:37;;;6757:18;;:::i;7209:125::-;7274:9;;;7295:10;;;7292:36;;;7308:18;;:::i","linkReferences":{}},"methodIdentifiers":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"ed463367","afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"d3eddcc5","balanceCache(bytes32)":"b5e54492","beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"414c3e33","beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"a145832a","getHashKey(address,address,bytes32)":"8678d6ef","getTermsInfo(bytes)":"b99deb0e","isLocked(bytes32)":"32a16f4e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"afterAllHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_terms\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_delegationHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"afterHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashKey\",\"type\":\"bytes32\"}],\"name\":\"balanceCache\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beforeAllHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_terms\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"_mode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_delegationHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beforeHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_delegationHash\",\"type\":\"bytes32\"}],\"name\":\"getHashKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_terms\",\"type\":\"bytes\"}],\"name\":\"getTermsInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enforceDecrease_\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashKey\",\"type\":\"bytes32\"}],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"lock\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract allows setting up some guardrails around balance changes. By specifying an amount and a direction (decrease/increase), one can enforce a maximum decrease or minimum increase in after-execution balance. The change can be either a decrease or increase based on the `enforceDecrease` flag.This contract has no enforcement of how the balance changes. It's meant to be used alongside additional enforcers to create granular permissions.This enforcer operates only in default execution mode.Security Notice: This enforcer tracks balance changes by comparing the recipient's balance before and after execution. Since enforcers watching the same recipient share state, a single balance modification may satisfy multiple enforcers simultaneously. Users should avoid tracking the same recipient's balance on multiple enforcers in a single delegation chain to prevent unintended behavior. Given its potential for concurrent condition fulfillment, use this enforcer at your own risk and ensure it aligns with your intended security model.\",\"kind\":\"dev\",\"methods\":{\"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"params\":{\"_terms\":\"73 packed bytes where: - first byte: boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00) - next 20 bytes: address of the token - next 20 bytes: address of the recipient - next 32 bytes: balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)\"}},\"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"params\":{\"_mode\":\"The execution mode. (Must be Default execType)\",\"_terms\":\"73 packed bytes where: - first byte: boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00) - next 20 bytes: address of the token - next 20 bytes: address of the recipient - next 32 bytes: balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)\"}},\"getHashKey(address,address,bytes32)\":{\"params\":{\"_caller\":\"Address of the sender calling the enforcer.\",\"_delegationHash\":\"The hash of the delegation.\",\"_token\":\"Token being compared in the beforeHook and afterHook.\"},\"returns\":{\"_0\":\"The hash to be used as key of the mapping.\"}},\"getTermsInfo(bytes)\":{\"params\":{\"_terms\":\"encoded data that is used during the execution hooks.\"},\"returns\":{\"amount_\":\"Balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)\",\"enforceDecrease_\":\"Boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00).\",\"recipient_\":\"The address of the recipient.\",\"token_\":\"The address of the token.\"}}},\"title\":\"ERC20BalanceChangeEnforcer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions after all actions in a batch redemption process have been executed.\"},\"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"This function enforces that the delegators ERC20 balance has changed by the expected amount.\"},\"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions before any actions in a batch redemption process begin.\"},\"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"This function caches the delegators ERC20 balance before the delegation is executed.\"},\"getHashKey(address,address,bytes32)\":{\"notice\":\"Generates the key that identifies the run. Produced by the hash of the values used.\"},\"getTermsInfo(bytes)\":{\"notice\":\"Decodes the terms used in this CaveatEnforcer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/enforcers/ERC20BalanceChangeEnforcer.sol\":\"ERC20BalanceChangeEnforcer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@FCL/=lib/FCL/solidity/src/\",\":@SCL/=lib/SCL/src/\",\":@account-abstraction/=lib/account-abstraction/contracts/\",\":@bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":@erc7579/=lib/erc7579-implementation/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solidity-stringutils/=lib/solidity-stringutils/src/\",\":@solidity/=lib/SCL/src/\",\":FCL/=lib/FCL/solidity/src/\",\":SCL/=lib/SCL/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc7579-implementation/=lib/erc7579-implementation/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/\",\":solady/=lib/erc7579-implementation/node_modules/solady/src/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\"]},\"sources\":{\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/erc7579-implementation/src/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0x08368aba5f1bb83eb57e9f8d31a04edee4be69159b4844a6443f65100917011c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://789244f53fb8b25f4bacb8ac0b9c2f5ea2067a9c5c7bd13fd00e10618e52e2ff\",\"dweb:/ipfs/QmVSbGSyDpfL6UfyvaMBQHmV9u52wway1h3caJnvXVgkvn\"]},\"lib/erc7579-implementation/src/lib/ModeLib.sol\":{\"keccak256\":\"0x02ce0fc8805d1427841f32e2335157e3fae18e99d5c49ba46d53e12fcd1a5185\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9900d0dfb593b136a058a16f1817f60d5096c3eca6adea662381e12c241b14b4\",\"dweb:/ipfs/QmdsfLLtfzY9oEpZxk1Ve1PLuPQdphZcNK92L6mHa8n1h7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"src/enforcers/CaveatEnforcer.sol\":{\"keccak256\":\"0xe6e44a3dfcb667fba89d7dc73ba06327add01a9ef4ecd11f3627d97e337041d5\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://79988dc7b56022300549c6ede1c7075fdcadb308191e0ece4f85f94f69036bb5\",\"dweb:/ipfs/QmRG1q4NFfo6RpoVWMdK3679eLg2fUru4dUESwCcmxzvoz\"]},\"src/enforcers/ERC20BalanceChangeEnforcer.sol\":{\"keccak256\":\"0x9cf689c5fd35896af1a07bce2c64375eaff30f51e271bb4ed3998ad976627671\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://fe1ca6bd12e44a7941794dd6b999f224f3890b3d1e5d9628f5d784c37f08172a\",\"dweb:/ipfs/QmP32xCNYQ2Jtstg9YJ51Gwa8vguYduAq37PsadqQTQSvj\"]},\"src/interfaces/ICaveatEnforcer.sol\":{\"keccak256\":\"0x61c2d69cb8cc4b04d5ce786ff1b38c07009a262b64900e58a109239942bfad16\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://a67f09f1229e703574dff9103daafa494e90e22577691f180ecfc2c3f50a3ecc\",\"dweb:/ipfs/QmVFXq8mx2PMkgMLoh3pTyQqkH9umwRUjKXtjeZscktf79\"]},\"src/utils/Constants.sol\":{\"keccak256\":\"0x5f1e2913a96b7f88bc7fbd2de329465822ae0d438ff212883c6dd3bd5e9609a5\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://51a750792520aaf10cb246112d5554bb33007edd8be97b78e90be9847d663978\",\"dweb:/ipfs/QmbQSZGNeG9f8DNVbCEo1SGRoJU4fQJwQfUHrzQNayFWNs\"]},\"src/utils/Types.sol\":{\"keccak256\":\"0xda4094eb4839087157f34750fb4d1a2d6241fbb8ee0d41fd1f2905209e6a05b0\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://1fab0d416245579b01d908ffb607f41ace7b103c1c6a3b9d0f8b32f29ac46247\",\"dweb:/ipfs/QmfDWFbdCEkvaKnPpZmDPtxYVBxHt2XA2zY9jon9Jm7pFf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"afterAllHook"},{"inputs":[{"internalType":"bytes","name":"_terms","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"_delegationHash","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"afterHook"},{"inputs":[{"internalType":"bytes32","name":"hashKey","type":"bytes32"}],"stateMutability":"view","type":"function","name":"balanceCache","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"beforeAllHook"},{"inputs":[{"internalType":"bytes","name":"_terms","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"_mode","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"_delegationHash","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"beforeHook"},{"inputs":[{"internalType":"address","name":"_caller","type":"address"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"bytes32","name":"_delegationHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"getHashKey","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes","name":"_terms","type":"bytes"}],"stateMutability":"pure","type":"function","name":"getTermsInfo","outputs":[{"internalType":"bool","name":"enforceDecrease_","type":"bool"},{"internalType":"address","name":"token_","type":"address"},{"internalType":"address","name":"recipient_","type":"address"},{"internalType":"uint256","name":"amount_","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"hashKey","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isLocked","outputs":[{"internalType":"bool","name":"lock","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"params":{"_terms":"73 packed bytes where: - first byte: boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00) - next 20 bytes: address of the token - next 20 bytes: address of the recipient - next 32 bytes: balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)"}},"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"params":{"_mode":"The execution mode. (Must be Default execType)","_terms":"73 packed bytes where: - first byte: boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00) - next 20 bytes: address of the token - next 20 bytes: address of the recipient - next 32 bytes: balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)"}},"getHashKey(address,address,bytes32)":{"params":{"_caller":"Address of the sender calling the enforcer.","_delegationHash":"The hash of the delegation.","_token":"Token being compared in the beforeHook and afterHook."},"returns":{"_0":"The hash to be used as key of the mapping."}},"getTermsInfo(bytes)":{"params":{"_terms":"encoded data that is used during the execution hooks."},"returns":{"amount_":"Balance change guardrail amount (i.e., minimum increase OR maximum decrease, depending on enforceDecrease)","enforceDecrease_":"Boolean indicating if the balance should decrease (true | 0x01) or increase (false | 0x00).","recipient_":"The address of the recipient.","token_":"The address of the token."}}},"version":1},"userdoc":{"kind":"user","methods":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions after all actions in a batch redemption process have been executed."},"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"This function enforces that the delegators ERC20 balance has changed by the expected amount."},"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions before any actions in a batch redemption process begin."},"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"This function caches the delegators ERC20 balance before the delegation is executed."},"getHashKey(address,address,bytes32)":{"notice":"Generates the key that identifies the run. Produced by the hash of the values used."},"getTermsInfo(bytes)":{"notice":"Decodes the terms used in this CaveatEnforcer."}},"version":1}},"settings":{"remappings":["@FCL/=lib/FCL/solidity/src/","@SCL/=lib/SCL/src/","@account-abstraction/=lib/account-abstraction/contracts/","@bytes-utils/=lib/solidity-bytes-utils/contracts/","@erc7579/=lib/erc7579-implementation/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@solidity-stringutils/=lib/solidity-stringutils/src/","@solidity/=lib/SCL/src/","FCL/=lib/FCL/solidity/src/","SCL/=lib/SCL/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","erc7579-implementation/=lib/erc7579-implementation/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/","solady/=lib/erc7579-implementation/node_modules/solady/src/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-stringutils/=lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/enforcers/ERC20BalanceChangeEnforcer.sol":"ERC20BalanceChangeEnforcer"},"evmVersion":"london","libraries":{}},"sources":{"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"lib/erc7579-implementation/src/interfaces/IERC7579Account.sol":{"keccak256":"0x08368aba5f1bb83eb57e9f8d31a04edee4be69159b4844a6443f65100917011c","urls":["bzz-raw://789244f53fb8b25f4bacb8ac0b9c2f5ea2067a9c5c7bd13fd00e10618e52e2ff","dweb:/ipfs/QmVSbGSyDpfL6UfyvaMBQHmV9u52wway1h3caJnvXVgkvn"],"license":"MIT"},"lib/erc7579-implementation/src/lib/ModeLib.sol":{"keccak256":"0x02ce0fc8805d1427841f32e2335157e3fae18e99d5c49ba46d53e12fcd1a5185","urls":["bzz-raw://9900d0dfb593b136a058a16f1817f60d5096c3eca6adea662381e12c241b14b4","dweb:/ipfs/QmdsfLLtfzY9oEpZxk1Ve1PLuPQdphZcNK92L6mHa8n1h7"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"src/enforcers/CaveatEnforcer.sol":{"keccak256":"0xe6e44a3dfcb667fba89d7dc73ba06327add01a9ef4ecd11f3627d97e337041d5","urls":["bzz-raw://79988dc7b56022300549c6ede1c7075fdcadb308191e0ece4f85f94f69036bb5","dweb:/ipfs/QmRG1q4NFfo6RpoVWMdK3679eLg2fUru4dUESwCcmxzvoz"],"license":"MIT AND Apache-2.0"},"src/enforcers/ERC20BalanceChangeEnforcer.sol":{"keccak256":"0x9cf689c5fd35896af1a07bce2c64375eaff30f51e271bb4ed3998ad976627671","urls":["bzz-raw://fe1ca6bd12e44a7941794dd6b999f224f3890b3d1e5d9628f5d784c37f08172a","dweb:/ipfs/QmP32xCNYQ2Jtstg9YJ51Gwa8vguYduAq37PsadqQTQSvj"],"license":"MIT AND Apache-2.0"},"src/interfaces/ICaveatEnforcer.sol":{"keccak256":"0x61c2d69cb8cc4b04d5ce786ff1b38c07009a262b64900e58a109239942bfad16","urls":["bzz-raw://a67f09f1229e703574dff9103daafa494e90e22577691f180ecfc2c3f50a3ecc","dweb:/ipfs/QmVFXq8mx2PMkgMLoh3pTyQqkH9umwRUjKXtjeZscktf79"],"license":"MIT AND Apache-2.0"},"src/utils/Constants.sol":{"keccak256":"0x5f1e2913a96b7f88bc7fbd2de329465822ae0d438ff212883c6dd3bd5e9609a5","urls":["bzz-raw://51a750792520aaf10cb246112d5554bb33007edd8be97b78e90be9847d663978","dweb:/ipfs/QmbQSZGNeG9f8DNVbCEo1SGRoJU4fQJwQfUHrzQNayFWNs"],"license":"MIT AND Apache-2.0"},"src/utils/Types.sol":{"keccak256":"0xda4094eb4839087157f34750fb4d1a2d6241fbb8ee0d41fd1f2905209e6a05b0","urls":["bzz-raw://1fab0d416245579b01d908ffb607f41ace7b103c1c6a3b9d0f8b32f29ac46247","dweb:/ipfs/QmfDWFbdCEkvaKnPpZmDPtxYVBxHt2XA2zY9jon9Jm7pFf"],"license":"MIT AND Apache-2.0"}},"version":1},"id":66}