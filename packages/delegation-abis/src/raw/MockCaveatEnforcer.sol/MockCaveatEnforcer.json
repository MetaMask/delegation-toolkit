{"abi":[{"type":"function","name":"afterAllHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"afterHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"afterHookCallCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"beforeAllHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"beforeHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"beforeHookCallCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b5061028c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063414c3e33146100675780637c46d3c814610083578063a145832a1461009e578063d3eddcc5146100b1578063e38ad590146100c4578063ed46336714610067575b600080fd5b610081610075366004610162565b50505050505050505050565b005b61008c60015481565b60405190815260200160405180910390f35b6100816100ac366004610162565b6100cd565b6100816100bf366004610162565b6100ed565b61008c60005481565b6000805490806100dc8361022f565b919050555050505050505050505050565b600180549060006100dc8361022f565b60008083601f84011261010f57600080fd5b50813567ffffffffffffffff81111561012757600080fd5b60208301915083602082850101111561013f57600080fd5b9250929050565b80356001600160a01b038116811461015d57600080fd5b919050565b60008060008060008060008060008060e08b8d03121561018157600080fd5b8a3567ffffffffffffffff8082111561019957600080fd5b6101a58e838f016100fd565b909c509a5060208d01359150808211156101be57600080fd5b6101ca8e838f016100fd565b909a50985060408d0135975060608d01359150808211156101ea57600080fd5b506101f78d828e016100fd565b90965094505060808b0135925061021060a08c01610146565b915061021e60c08c01610146565b90509295989b9194979a5092959850565b60006001820161024f57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220fbb59fec9ec7bf6cdda251d9d498ff456d0623f22ca1f4ef5f02ab03744fc44c64736f6c63430008170033","sourceMap":"323:700:108:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063414c3e33146100675780637c46d3c814610083578063a145832a1461009e578063d3eddcc5146100b1578063e38ad590146100c4578063ed46336714610067575b600080fd5b610081610075366004610162565b50505050505050505050565b005b61008c60015481565b60405190815260200160405180910390f35b6100816100ac366004610162565b6100cd565b6100816100bf366004610162565b6100ed565b61008c60005481565b6000805490806100dc8361022f565b919050555050505050505050505050565b600180549060006100dc8361022f565b60008083601f84011261010f57600080fd5b50813567ffffffffffffffff81111561012757600080fd5b60208301915083602082850101111561013f57600080fd5b9250929050565b80356001600160a01b038116811461015d57600080fd5b919050565b60008060008060008060008060008060e08b8d03121561018157600080fd5b8a3567ffffffffffffffff8082111561019957600080fd5b6101a58e838f016100fd565b909c509a5060208d01359150808211156101be57600080fd5b6101ca8e838f016100fd565b909a50985060408d0135975060608d01359150808211156101ea57600080fd5b506101f78d828e016100fd565b90965094505060808b0135925061021060a08c01610146565b915061021e60c08c01610146565b90509295989b9194979a5092959850565b60006001820161024f57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220fbb59fec9ec7bf6cdda251d9d498ff456d0623f22ca1f4ef5f02ab03744fc44c64736f6c63430008170033","sourceMap":"323:700:108:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;614:126:63;;;;;;:::i;:::-;;;;;;;;;;;;;;415:33:108;;;;;;;;;2016:25:111;;;2004:2;1989:18;415:33:108;;;;;;;578:159;;;;;;:::i;:::-;;:::i;864:157::-;;;;;;:::i;:::-;;:::i;375:34::-;;;;;;578:159;709:19;:21;;;:19;:21;;;:::i;:::-;;;;;;578:159;;;;;;;;;;:::o;864:157::-;994:18;:20;;;:18;:20;;;:::i;14:347:111:-;65:8;75:6;129:3;122:4;114:6;110:17;106:27;96:55;;147:1;144;137:12;96:55;-1:-1:-1;170:20:111;;213:18;202:30;;199:50;;;245:1;242;235:12;199:50;282:4;274:6;270:17;258:29;;334:3;327:4;318:6;310;306:19;302:30;299:39;296:59;;;351:1;348;341:12;296:59;14:347;;;;;:::o;366:173::-;434:20;;-1:-1:-1;;;;;483:31:111;;473:42;;463:70;;529:1;526;519:12;463:70;366:173;;;:::o;544:1321::-;719:6;727;735;743;751;759;767;775;783;791;844:3;832:9;823:7;819:23;815:33;812:53;;;861:1;858;851:12;812:53;901:9;888:23;930:18;971:2;963:6;960:14;957:34;;;987:1;984;977:12;957:34;1026:58;1076:7;1067:6;1056:9;1052:22;1026:58;:::i;:::-;1103:8;;-1:-1:-1;1000:84:111;-1:-1:-1;1191:2:111;1176:18;;1163:32;;-1:-1:-1;1207:16:111;;;1204:36;;;1236:1;1233;1226:12;1204:36;1275:60;1327:7;1316:8;1305:9;1301:24;1275:60;:::i;:::-;1354:8;;-1:-1:-1;1249:86:111;-1:-1:-1;1436:2:111;1421:18;;1408:32;;-1:-1:-1;1493:2:111;1478:18;;1465:32;;-1:-1:-1;1509:16:111;;;1506:36;;;1538:1;1535;1528:12;1506:36;;1577:60;1629:7;1618:8;1607:9;1603:24;1577:60;:::i;:::-;1656:8;;-1:-1:-1;1551:86:111;-1:-1:-1;;1738:3:111;1723:19;;1710:33;;-1:-1:-1;1762:39:111;1796:3;1781:19;;1762:39;:::i;:::-;1752:49;;1820:39;1854:3;1843:9;1839:19;1820:39;:::i;:::-;1810:49;;544:1321;;;;;;;;;;;;;:::o;2052:232::-;2091:3;2112:17;;;2109:140;;2171:10;2166:3;2162:20;2159:1;2152:31;2206:4;2203:1;2196:15;2234:4;2231:1;2224:15;2109:140;-1:-1:-1;2276:1:111;2265:13;;2052:232::o","linkReferences":{}},"methodIdentifiers":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"ed463367","afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"d3eddcc5","afterHookCallCount()":"7c46d3c8","beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"414c3e33","beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"a145832a","beforeHookCallCount()":"e38ad590"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"afterAllHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"afterHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"afterHookCallCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beforeAllHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beforeHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beforeHookCallCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is a mock implementation of the CaveatEnforcer interface for testing purposes.\",\"kind\":\"dev\",\"methods\":{\"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"Mocked implementation of the afterHook function. Increments the afterHook call count.\"},\"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"Mocked implementation of the beforeHook function. Increments the beforeHook call count.\"}},\"title\":\"MockCaveatEnforcer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions after all actions in a batch redemption process have been executed.\"},\"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions before any actions in a batch redemption process begin.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/utils/MockCaveatEnforcer.sol\":\"MockCaveatEnforcer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@FCL/=lib/FCL/solidity/src/\",\":@SCL/=lib/SCL/src/\",\":@account-abstraction/=lib/account-abstraction/contracts/\",\":@bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":@erc7579/=lib/erc7579-implementation/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solidity-stringutils/=lib/solidity-stringutils/src/\",\":@solidity/=lib/SCL/src/\",\":FCL/=lib/FCL/solidity/src/\",\":SCL/=lib/SCL/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc7579-implementation/=lib/erc7579-implementation/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/\",\":solady/=lib/erc7579-implementation/node_modules/solady/src/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\"]},\"sources\":{\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/erc7579-implementation/src/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0x08368aba5f1bb83eb57e9f8d31a04edee4be69159b4844a6443f65100917011c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://789244f53fb8b25f4bacb8ac0b9c2f5ea2067a9c5c7bd13fd00e10618e52e2ff\",\"dweb:/ipfs/QmVSbGSyDpfL6UfyvaMBQHmV9u52wway1h3caJnvXVgkvn\"]},\"lib/erc7579-implementation/src/lib/ModeLib.sol\":{\"keccak256\":\"0x02ce0fc8805d1427841f32e2335157e3fae18e99d5c49ba46d53e12fcd1a5185\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9900d0dfb593b136a058a16f1817f60d5096c3eca6adea662381e12c241b14b4\",\"dweb:/ipfs/QmdsfLLtfzY9oEpZxk1Ve1PLuPQdphZcNK92L6mHa8n1h7\"]},\"src/enforcers/CaveatEnforcer.sol\":{\"keccak256\":\"0xe6e44a3dfcb667fba89d7dc73ba06327add01a9ef4ecd11f3627d97e337041d5\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://79988dc7b56022300549c6ede1c7075fdcadb308191e0ece4f85f94f69036bb5\",\"dweb:/ipfs/QmRG1q4NFfo6RpoVWMdK3679eLg2fUru4dUESwCcmxzvoz\"]},\"src/interfaces/ICaveatEnforcer.sol\":{\"keccak256\":\"0x61c2d69cb8cc4b04d5ce786ff1b38c07009a262b64900e58a109239942bfad16\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://a67f09f1229e703574dff9103daafa494e90e22577691f180ecfc2c3f50a3ecc\",\"dweb:/ipfs/QmVFXq8mx2PMkgMLoh3pTyQqkH9umwRUjKXtjeZscktf79\"]},\"src/utils/Constants.sol\":{\"keccak256\":\"0x5f1e2913a96b7f88bc7fbd2de329465822ae0d438ff212883c6dd3bd5e9609a5\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://51a750792520aaf10cb246112d5554bb33007edd8be97b78e90be9847d663978\",\"dweb:/ipfs/QmbQSZGNeG9f8DNVbCEo1SGRoJU4fQJwQfUHrzQNayFWNs\"]},\"src/utils/Types.sol\":{\"keccak256\":\"0xda4094eb4839087157f34750fb4d1a2d6241fbb8ee0d41fd1f2905209e6a05b0\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://1fab0d416245579b01d908ffb607f41ace7b103c1c6a3b9d0f8b32f29ac46247\",\"dweb:/ipfs/QmfDWFbdCEkvaKnPpZmDPtxYVBxHt2XA2zY9jon9Jm7pFf\"]},\"test/utils/MockCaveatEnforcer.sol\":{\"keccak256\":\"0x5eb66bef3ae708a49a004cbe8b45480ef418be9e1197e9e23345fa5c1c46835e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aa634f7a7d31bb4cc884ca3be38707f8e5f320fa1d8d3834fa69d4104a6c18\",\"dweb:/ipfs/QmeRBuS79jJhM6YhKjxxsJCSf4xnkqwUEPgkf5ZMQmkCgk\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"afterAllHook"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"afterHook"},{"inputs":[],"stateMutability":"view","type":"function","name":"afterHookCallCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"beforeAllHook"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"beforeHook"},{"inputs":[],"stateMutability":"view","type":"function","name":"beforeHookCallCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"Mocked implementation of the afterHook function. Increments the afterHook call count."},"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"Mocked implementation of the beforeHook function. Increments the beforeHook call count."}},"version":1},"userdoc":{"kind":"user","methods":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions after all actions in a batch redemption process have been executed."},"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions before any actions in a batch redemption process begin."}},"version":1}},"settings":{"remappings":["@FCL/=lib/FCL/solidity/src/","@SCL/=lib/SCL/src/","@account-abstraction/=lib/account-abstraction/contracts/","@bytes-utils/=lib/solidity-bytes-utils/contracts/","@erc7579/=lib/erc7579-implementation/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@solidity-stringutils/=lib/solidity-stringutils/src/","@solidity/=lib/SCL/src/","FCL/=lib/FCL/solidity/src/","SCL/=lib/SCL/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","erc7579-implementation/=lib/erc7579-implementation/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/","solady/=lib/erc7579-implementation/node_modules/solady/src/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-stringutils/=lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/utils/MockCaveatEnforcer.sol":"MockCaveatEnforcer"},"evmVersion":"london","libraries":{}},"sources":{"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"lib/erc7579-implementation/src/interfaces/IERC7579Account.sol":{"keccak256":"0x08368aba5f1bb83eb57e9f8d31a04edee4be69159b4844a6443f65100917011c","urls":["bzz-raw://789244f53fb8b25f4bacb8ac0b9c2f5ea2067a9c5c7bd13fd00e10618e52e2ff","dweb:/ipfs/QmVSbGSyDpfL6UfyvaMBQHmV9u52wway1h3caJnvXVgkvn"],"license":"MIT"},"lib/erc7579-implementation/src/lib/ModeLib.sol":{"keccak256":"0x02ce0fc8805d1427841f32e2335157e3fae18e99d5c49ba46d53e12fcd1a5185","urls":["bzz-raw://9900d0dfb593b136a058a16f1817f60d5096c3eca6adea662381e12c241b14b4","dweb:/ipfs/QmdsfLLtfzY9oEpZxk1Ve1PLuPQdphZcNK92L6mHa8n1h7"],"license":"MIT"},"src/enforcers/CaveatEnforcer.sol":{"keccak256":"0xe6e44a3dfcb667fba89d7dc73ba06327add01a9ef4ecd11f3627d97e337041d5","urls":["bzz-raw://79988dc7b56022300549c6ede1c7075fdcadb308191e0ece4f85f94f69036bb5","dweb:/ipfs/QmRG1q4NFfo6RpoVWMdK3679eLg2fUru4dUESwCcmxzvoz"],"license":"MIT AND Apache-2.0"},"src/interfaces/ICaveatEnforcer.sol":{"keccak256":"0x61c2d69cb8cc4b04d5ce786ff1b38c07009a262b64900e58a109239942bfad16","urls":["bzz-raw://a67f09f1229e703574dff9103daafa494e90e22577691f180ecfc2c3f50a3ecc","dweb:/ipfs/QmVFXq8mx2PMkgMLoh3pTyQqkH9umwRUjKXtjeZscktf79"],"license":"MIT AND Apache-2.0"},"src/utils/Constants.sol":{"keccak256":"0x5f1e2913a96b7f88bc7fbd2de329465822ae0d438ff212883c6dd3bd5e9609a5","urls":["bzz-raw://51a750792520aaf10cb246112d5554bb33007edd8be97b78e90be9847d663978","dweb:/ipfs/QmbQSZGNeG9f8DNVbCEo1SGRoJU4fQJwQfUHrzQNayFWNs"],"license":"MIT AND Apache-2.0"},"src/utils/Types.sol":{"keccak256":"0xda4094eb4839087157f34750fb4d1a2d6241fbb8ee0d41fd1f2905209e6a05b0","urls":["bzz-raw://1fab0d416245579b01d908ffb607f41ace7b103c1c6a3b9d0f8b32f29ac46247","dweb:/ipfs/QmfDWFbdCEkvaKnPpZmDPtxYVBxHt2XA2zY9jon9Jm7pFf"],"license":"MIT AND Apache-2.0"},"test/utils/MockCaveatEnforcer.sol":{"keccak256":"0x5eb66bef3ae708a49a004cbe8b45480ef418be9e1197e9e23345fa5c1c46835e","urls":["bzz-raw://f8aa634f7a7d31bb4cc884ca3be38707f8e5f320fa1d8d3834fa69d4104a6c18","dweb:/ipfs/QmeRBuS79jJhM6YhKjxxsJCSf4xnkqwUEPgkf5ZMQmkCgk"],"license":"MIT"}},"version":1},"id":108}