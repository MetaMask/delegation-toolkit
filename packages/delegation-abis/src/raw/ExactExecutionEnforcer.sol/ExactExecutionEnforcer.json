{"abi":[{"type":"function","name":"afterAllHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"afterHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"beforeAllHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"beforeHook","inputs":[{"name":"_terms","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"_mode","type":"bytes32","internalType":"ModeCode"},{"name":"_executionCallData","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"getTermsInfo","inputs":[{"name":"_terms","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"execution_","type":"tuple","internalType":"struct Execution","components":[{"name":"target","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"pure"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b5061062f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a3660046103e9565b50505050505050505050565b005b6100766100863660046103e9565b6100b4565b61009e6100993660046104b6565b610197565b6040516100ab91906104f8565b60405180910390f35b856100c0816000610210565b6101115760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b610122816000610210565b61017c5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610108565b506101898c8c8989610227565b505050505050505050505050565b604080516060808201835260008083526020830152918101919091526101bd8383610333565b81818080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506040860152505060208301526001600160a01b0316815292915050565b6001600160f81b0319828116908216145b92915050565b6000803660006102378686610333565b929650909450925090506001600160a01b038416610259601460008a8c61056c565b61026291610596565b60601c14801561028757508261027c603460148a8c61056c565b610285916105cb565b145b80156102cc5750818160405161029e9291906105e9565b6040519081900390206102b4886034818c61056c565b6040516102c29291906105e9565b6040518091039020145b6103295760405162461bcd60e51b815260206004820152602860248201527f4578616374457865637574696f6e456e666f726365723a696e76616c69642d656044820152673c32b1baba34b7b760c11b6064820152608401610108565b5050505050505050565b6000803681610345601482878961056c565b61034e91610596565b60601c935061036160346014878961056c565b61036a916105cb565b9250610379856034818961056c565b949793965094505050565b60008083601f84011261039657600080fd5b50813567ffffffffffffffff8111156103ae57600080fd5b6020830191508360208285010111156103c657600080fd5b9250929050565b80356001600160a01b03811681146103e457600080fd5b919050565b60008060008060008060008060008060e08b8d03121561040857600080fd5b8a3567ffffffffffffffff8082111561042057600080fd5b61042c8e838f01610384565b909c509a5060208d013591508082111561044557600080fd5b6104518e838f01610384565b909a50985060408d0135975060608d013591508082111561047157600080fd5b5061047e8d828e01610384565b90965094505060808b0135925061049760a08c016103cd565b91506104a560c08c016103cd565b90509295989b9194979a5092959850565b600080602083850312156104c957600080fd5b823567ffffffffffffffff8111156104e057600080fd5b6104ec85828601610384565b90969095509350505050565b6000602080835260018060a01b038451166020840152602084015160408401526040840151606080850152805180608086015260005b8181101561054a5782810184015186820160a00152830161052e565b50600060a0828701015260a0601f19601f830116860101935050505092915050565b6000808585111561057c57600080fd5b8386111561058957600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156105c35780818660140360031b1b83161692505b505092915050565b8035602083101561022157600019602084900360031b1b1692915050565b818382376000910190815291905056fea2646970667358221220e961f8992a129634c5841f6f8ff7eac208b6822d2646363c613c0f46bcd65a0b64736f6c63430008170033","sourceMap":"563:2334:75:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063414c3e331461005c578063a145832a14610078578063b99deb0e1461008b578063d3eddcc51461005c578063ed4633671461005c575b600080fd5b61007661006a3660046103e9565b50505050505050505050565b005b6100766100863660046103e9565b6100b4565b61009e6100993660046104b6565b610197565b6040516100ab91906104f8565b60405180910390f35b856100c0816000610210565b6101115760405162461bcd60e51b815260206004820181905260248201527f436176656174456e666f726365723a696e76616c69642d63616c6c2d7479706560448201526064015b60405180910390fd5b86600881901b610122816000610210565b61017c5760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b6064820152608401610108565b506101898c8c8989610227565b505050505050505050505050565b604080516060808201835260008083526020830152918101919091526101bd8383610333565b81818080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506040860152505060208301526001600160a01b0316815292915050565b6001600160f81b0319828116908216145b92915050565b6000803660006102378686610333565b929650909450925090506001600160a01b038416610259601460008a8c61056c565b61026291610596565b60601c14801561028757508261027c603460148a8c61056c565b610285916105cb565b145b80156102cc5750818160405161029e9291906105e9565b6040519081900390206102b4886034818c61056c565b6040516102c29291906105e9565b6040518091039020145b6103295760405162461bcd60e51b815260206004820152602860248201527f4578616374457865637574696f6e456e666f726365723a696e76616c69642d656044820152673c32b1baba34b7b760c11b6064820152608401610108565b5050505050505050565b6000803681610345601482878961056c565b61034e91610596565b60601c935061036160346014878961056c565b61036a916105cb565b9250610379856034818961056c565b949793965094505050565b60008083601f84011261039657600080fd5b50813567ffffffffffffffff8111156103ae57600080fd5b6020830191508360208285010111156103c657600080fd5b9250929050565b80356001600160a01b03811681146103e457600080fd5b919050565b60008060008060008060008060008060e08b8d03121561040857600080fd5b8a3567ffffffffffffffff8082111561042057600080fd5b61042c8e838f01610384565b909c509a5060208d013591508082111561044557600080fd5b6104518e838f01610384565b909a50985060408d0135975060608d013591508082111561047157600080fd5b5061047e8d828e01610384565b90965094505060808b0135925061049760a08c016103cd565b91506104a560c08c016103cd565b90509295989b9194979a5092959850565b600080602083850312156104c957600080fd5b823567ffffffffffffffff8111156104e057600080fd5b6104ec85828601610384565b90969095509350505050565b6000602080835260018060a01b038451166020840152602084015160408401526040840151606080850152805180608086015260005b8181101561054a5782810184015186820160a00152830161052e565b50600060a0828701015260a0601f19601f830116860101935050505092915050565b6000808585111561057c57600080fd5b8386111561058957600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156105c35780818660140360031b1b83161692505b505092915050565b8035602083101561022157600019602084900360031b1b1692915050565b818382376000910190815291905056fea2646970667358221220e961f8992a129634c5841f6f8ff7eac208b6822d2646363c613c0f46bcd65a0b64736f6c63430008170033","sourceMap":"563:2334:75:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;614:126:63;;;;;;:::i;:::-;;;;;;;;;;;;;;1067:389:75;;;;;;:::i;:::-;;:::i;1653:194::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1067:389;1342:5;1402:45:63;1342:5:75;2789:4:16;1402:45:63;:::i;:::-;1394:90;;;;-1:-1:-1;;;1394:90:63;;3318:2:111;1394:90:63;;;3300:21:111;;;3337:18;;;3330:30;3396:34;3376:18;;;3369:62;3448:18;;1394:90:63;;;;;;;;;1382:5:75;4155:1:16;4151:12;;;2014:29:63::1;4151:12:16::0;1954:18:63::1;2014:29;:::i;:::-;2006:79;;;::::0;-1:-1:-1;;;2006:79:63;;3679:2:111;2006:79:63::1;::::0;::::1;3661:21:111::0;3718:2;3698:18;;;3691:30;3757:34;3737:18;;;3730:62;-1:-1:-1;;;3808:18:111;;;3801:35;3853:19;;2006:79:63::1;3477:401:111::0;2006:79:63::1;1937:159;1403:46:75::2;1422:6;;1430:18;;1403;:46::i;:::-;1504:1:63::1;1067:389:75::0;;;;;;;;;;;:::o;1653:194::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1819:21:75;:6;;:19;:21::i;:::-;1758:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1796:19:75;;;1758:82;-1:-1:-1;;1778:16:75;;;1758:82;-1:-1:-1;;;;;1758:82:75;;;1759:10;1653:194;-1:-1:-1;;1653:194:75:o;5304:120:16:-;-1:-1:-1;;;;;;5381:40:16;;;;;;;5304:120;;;;;:::o;2377:518:75:-;2520:19;2541:18;2561:28;;2593:33;:18;;:31;:33::i;:::-;2519:107;;-1:-1:-1;2519:107:75;;-1:-1:-1;2519:107:75;-1:-1:-1;2519:107:75;-1:-1:-1;;;;;;2658:45:75;;2674:12;2683:2;2681:1;2674:6;;:12;:::i;:::-;2666:21;;;:::i;:::-;2658:30;;:45;:94;;;;-1:-1:-1;2742:10:75;2723:13;2733:2;2730;2723:6;;:13;:::i;:::-;2715:22;;;:::i;:::-;2707:45;2658:94;:164;;;;;2808:13;;2798:24;;;;;;;:::i;:::-;;;;;;;;;2782:11;:6;2789:2;2782:6;;:11;:::i;:::-;2772:22;;;;;;;:::i;:::-;;;;;;;;:50;2658:164;2637:251;;;;-1:-1:-1;;;2637:251:75;;5581:2:111;2637:251:75;;;5563:21:111;5620:2;5600:18;;;5593:30;5659:34;5639:18;;;5632:62;-1:-1:-1;;;5710:18:111;;;5703:38;5758:19;;2637:251:75;5379:404:111;2637:251:75;2476:419;;;;2377:518;;;;:::o;2513:333:15:-;2616:14;;2647:23;2616:14;2711:23;2731:2;2616:14;2711:17;;:23;:::i;:::-;2703:32;;;:::i;:::-;2695:41;;;-1:-1:-1;2770:24:15;2791:2;2788;2770:17;;:24;:::i;:::-;2762:33;;;:::i;:::-;2754:42;-1:-1:-1;2817:22:15;:17;2835:2;2817:17;;:22;:::i;:::-;2513:333;;;;-1:-1:-1;2806:33:15;-1:-1:-1;;;2513:333:15:o;14:347:111:-;65:8;75:6;129:3;122:4;114:6;110:17;106:27;96:55;;147:1;144;137:12;96:55;-1:-1:-1;170:20:111;;213:18;202:30;;199:50;;;245:1;242;235:12;199:50;282:4;274:6;270:17;258:29;;334:3;327:4;318:6;310;306:19;302:30;299:39;296:59;;;351:1;348;341:12;296:59;14:347;;;;;:::o;366:173::-;434:20;;-1:-1:-1;;;;;483:31:111;;473:42;;463:70;;529:1;526;519:12;463:70;366:173;;;:::o;544:1321::-;719:6;727;735;743;751;759;767;775;783;791;844:3;832:9;823:7;819:23;815:33;812:53;;;861:1;858;851:12;812:53;901:9;888:23;930:18;971:2;963:6;960:14;957:34;;;987:1;984;977:12;957:34;1026:58;1076:7;1067:6;1056:9;1052:22;1026:58;:::i;:::-;1103:8;;-1:-1:-1;1000:84:111;-1:-1:-1;1191:2:111;1176:18;;1163:32;;-1:-1:-1;1207:16:111;;;1204:36;;;1236:1;1233;1226:12;1204:36;1275:60;1327:7;1316:8;1305:9;1301:24;1275:60;:::i;:::-;1354:8;;-1:-1:-1;1249:86:111;-1:-1:-1;1436:2:111;1421:18;;1408:32;;-1:-1:-1;1493:2:111;1478:18;;1465:32;;-1:-1:-1;1509:16:111;;;1506:36;;;1538:1;1535;1528:12;1506:36;;1577:60;1629:7;1618:8;1607:9;1603:24;1577:60;:::i;:::-;1656:8;;-1:-1:-1;1551:86:111;-1:-1:-1;;1738:3:111;1723:19;;1710:33;;-1:-1:-1;1762:39:111;1796:3;1781:19;;1762:39;:::i;:::-;1752:49;;1820:39;1854:3;1843:9;1839:19;1820:39;:::i;:::-;1810:49;;544:1321;;;;;;;;;;;;;:::o;1870:409::-;1940:6;1948;2001:2;1989:9;1980:7;1976:23;1972:32;1969:52;;;2017:1;2014;2007:12;1969:52;2057:9;2044:23;2090:18;2082:6;2079:30;2076:50;;;2122:1;2119;2112:12;2076:50;2161:58;2211:7;2202:6;2191:9;2187:22;2161:58;:::i;:::-;2238:8;;2135:84;;-1:-1:-1;1870:409:111;-1:-1:-1;;;;1870:409:111:o;2284:827::-;2430:4;2459:2;2488;2477:9;2470:21;2563:1;2559;2554:3;2550:11;2546:19;2537:6;2531:13;2527:39;2522:2;2511:9;2507:18;2500:67;2621:2;2613:6;2609:15;2603:22;2598:2;2587:9;2583:18;2576:50;2673:2;2665:6;2661:15;2655:22;2715:4;2708;2697:9;2693:20;2686:34;2749:12;2743:19;2799:6;2793:3;2782:9;2778:19;2771:35;2824:1;2834:147;2848:6;2845:1;2842:13;2834:147;;;2944:20;;;2940:29;;2934:36;2909:17;;;2928:3;2905:27;2898:73;2863:10;;2834:147;;;2838:3;3031:1;3025:3;3016:6;3005:9;3001:22;2997:32;2990:43;3101:3;3094:2;3090:7;3085:2;3077:6;3073:15;3069:29;3058:9;3054:45;3050:55;3042:63;;;;;2284:827;;;;:::o;3883:331::-;3988:9;3999;4041:8;4029:10;4026:24;4023:44;;;4063:1;4060;4053:12;4023:44;4092:6;4082:8;4079:20;4076:40;;;4112:1;4109;4102:12;4076:40;-1:-1:-1;;4138:23:111;;;4183:25;;;;;-1:-1:-1;3883:331:111:o;4219:337::-;-1:-1:-1;;4340:19:111;;4427:11;;;;4458:2;4450:11;;4447:103;;;4537:2;4531;4524:3;4520:2;4516:12;4513:1;4509:20;4505:29;4501:2;4497:38;4493:47;4484:56;;4447:103;;;4219:337;;;;:::o;4561:255::-;4681:19;;4720:2;4712:11;;4709:101;;;-1:-1:-1;;4781:2:111;4777:12;;;4774:1;4770:20;4766:33;4755:45;4561:255;;;;:::o;4821:271::-;5004:6;4996;4991:3;4978:33;4960:3;5030:16;;5055:13;;;5030:16;4821:271;-1:-1:-1;4821:271:111:o","linkReferences":{}},"methodIdentifiers":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"ed463367","afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"d3eddcc5","beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"414c3e33","beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"a145832a","getTermsInfo(bytes)":"b99deb0e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"afterAllHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"afterHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beforeAllHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_terms\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"_mode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_executionCallData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beforeHook\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_terms\",\"type\":\"bytes\"}],\"name\":\"getTermsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Execution\",\"name\":\"execution_\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This enforcer operates only in single execution call type and with default execution mode.\",\"kind\":\"dev\",\"methods\":{\"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"params\":{\"_executionCallData\":\"The execution calldata.\",\"_mode\":\"The execution mode. (Must be Single callType, Default execType)\",\"_terms\":\"The encoded expected Execution.\"}},\"getTermsInfo(bytes)\":{\"params\":{\"_terms\":\"The encoded expected Execution.\"},\"returns\":{\"execution_\":\"The expected Execution.\"}}},\"title\":\"ExactExecutionEnforcer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions after all actions in a batch redemption process have been executed.\"},\"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions after the execution tied to a specific delegation in the redemption process.\"},\"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions before any actions in a batch redemption process begin.\"},\"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Validates that the execution matches exactly with the expected execution.\"},\"getTermsInfo(bytes)\":{\"notice\":\"Extracts the expected execution from the provided terms.\"}},\"notice\":\"Ensures that the provided execution matches exactly with the expected execution (target, value, and calldata).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/enforcers/ExactExecutionEnforcer.sol\":\"ExactExecutionEnforcer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@FCL/=lib/FCL/solidity/src/\",\":@SCL/=lib/SCL/src/\",\":@account-abstraction/=lib/account-abstraction/contracts/\",\":@bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":@erc7579/=lib/erc7579-implementation/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solidity-stringutils/=lib/solidity-stringutils/src/\",\":@solidity/=lib/SCL/src/\",\":FCL/=lib/FCL/solidity/src/\",\":SCL/=lib/SCL/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc7579-implementation/=lib/erc7579-implementation/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/\",\":solady/=lib/erc7579-implementation/node_modules/solady/src/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\"]},\"sources\":{\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/erc7579-implementation/src/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0x08368aba5f1bb83eb57e9f8d31a04edee4be69159b4844a6443f65100917011c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://789244f53fb8b25f4bacb8ac0b9c2f5ea2067a9c5c7bd13fd00e10618e52e2ff\",\"dweb:/ipfs/QmVSbGSyDpfL6UfyvaMBQHmV9u52wway1h3caJnvXVgkvn\"]},\"lib/erc7579-implementation/src/lib/ExecutionLib.sol\":{\"keccak256\":\"0xb436732367ed8a45ddfaa95c9c977ee7674ff5755353c3792a38608640406126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a60f10547e9d25e96e516406f16a35ce075dd4db79b7dccd92f90224c9f23b4\",\"dweb:/ipfs/QmcC3jpNmo7kT1oU8taPuZRjcWh88J3d4rv3hYsQKRVBwW\"]},\"lib/erc7579-implementation/src/lib/ModeLib.sol\":{\"keccak256\":\"0x02ce0fc8805d1427841f32e2335157e3fae18e99d5c49ba46d53e12fcd1a5185\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9900d0dfb593b136a058a16f1817f60d5096c3eca6adea662381e12c241b14b4\",\"dweb:/ipfs/QmdsfLLtfzY9oEpZxk1Ve1PLuPQdphZcNK92L6mHa8n1h7\"]},\"src/enforcers/CaveatEnforcer.sol\":{\"keccak256\":\"0xe6e44a3dfcb667fba89d7dc73ba06327add01a9ef4ecd11f3627d97e337041d5\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://79988dc7b56022300549c6ede1c7075fdcadb308191e0ece4f85f94f69036bb5\",\"dweb:/ipfs/QmRG1q4NFfo6RpoVWMdK3679eLg2fUru4dUESwCcmxzvoz\"]},\"src/enforcers/ExactExecutionEnforcer.sol\":{\"keccak256\":\"0x06914cfe3e7df2abfa6c27a15411e443af826590e07d601059dac8b7105f8ea9\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://556ef6219fd2bc6a261b536cafdcafd7a104121b3dd837ff3c4ea3933d5bf282\",\"dweb:/ipfs/QmcjvnHwq7EFctnmK9LLFt6Rbd26SHax5vYJoDM4LpeixS\"]},\"src/interfaces/ICaveatEnforcer.sol\":{\"keccak256\":\"0x61c2d69cb8cc4b04d5ce786ff1b38c07009a262b64900e58a109239942bfad16\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://a67f09f1229e703574dff9103daafa494e90e22577691f180ecfc2c3f50a3ecc\",\"dweb:/ipfs/QmVFXq8mx2PMkgMLoh3pTyQqkH9umwRUjKXtjeZscktf79\"]},\"src/utils/Constants.sol\":{\"keccak256\":\"0x5f1e2913a96b7f88bc7fbd2de329465822ae0d438ff212883c6dd3bd5e9609a5\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://51a750792520aaf10cb246112d5554bb33007edd8be97b78e90be9847d663978\",\"dweb:/ipfs/QmbQSZGNeG9f8DNVbCEo1SGRoJU4fQJwQfUHrzQNayFWNs\"]},\"src/utils/Types.sol\":{\"keccak256\":\"0xda4094eb4839087157f34750fb4d1a2d6241fbb8ee0d41fd1f2905209e6a05b0\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://1fab0d416245579b01d908ffb607f41ace7b103c1c6a3b9d0f8b32f29ac46247\",\"dweb:/ipfs/QmfDWFbdCEkvaKnPpZmDPtxYVBxHt2XA2zY9jon9Jm7pFf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"afterAllHook"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"afterHook"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"beforeAllHook"},{"inputs":[{"internalType":"bytes","name":"_terms","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"_mode","type":"bytes32"},{"internalType":"bytes","name":"_executionCallData","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function","name":"beforeHook"},{"inputs":[{"internalType":"bytes","name":"_terms","type":"bytes"}],"stateMutability":"pure","type":"function","name":"getTermsInfo","outputs":[{"internalType":"struct Execution","name":"execution_","type":"tuple","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"}]}]}],"devdoc":{"kind":"dev","methods":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"params":{"_executionCallData":"The execution calldata.","_mode":"The execution mode. (Must be Single callType, Default execType)","_terms":"The encoded expected Execution."}},"getTermsInfo(bytes)":{"params":{"_terms":"The encoded expected Execution."},"returns":{"execution_":"The expected Execution."}}},"version":1},"userdoc":{"kind":"user","methods":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions after all actions in a batch redemption process have been executed."},"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions after the execution tied to a specific delegation in the redemption process."},"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions before any actions in a batch redemption process begin."},"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Validates that the execution matches exactly with the expected execution."},"getTermsInfo(bytes)":{"notice":"Extracts the expected execution from the provided terms."}},"version":1}},"settings":{"remappings":["@FCL/=lib/FCL/solidity/src/","@SCL/=lib/SCL/src/","@account-abstraction/=lib/account-abstraction/contracts/","@bytes-utils/=lib/solidity-bytes-utils/contracts/","@erc7579/=lib/erc7579-implementation/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@solidity-stringutils/=lib/solidity-stringutils/src/","@solidity/=lib/SCL/src/","FCL/=lib/FCL/solidity/src/","SCL/=lib/SCL/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","erc7579-implementation/=lib/erc7579-implementation/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/","solady/=lib/erc7579-implementation/node_modules/solady/src/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-stringutils/=lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/enforcers/ExactExecutionEnforcer.sol":"ExactExecutionEnforcer"},"evmVersion":"london","libraries":{}},"sources":{"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"lib/erc7579-implementation/src/interfaces/IERC7579Account.sol":{"keccak256":"0x08368aba5f1bb83eb57e9f8d31a04edee4be69159b4844a6443f65100917011c","urls":["bzz-raw://789244f53fb8b25f4bacb8ac0b9c2f5ea2067a9c5c7bd13fd00e10618e52e2ff","dweb:/ipfs/QmVSbGSyDpfL6UfyvaMBQHmV9u52wway1h3caJnvXVgkvn"],"license":"MIT"},"lib/erc7579-implementation/src/lib/ExecutionLib.sol":{"keccak256":"0xb436732367ed8a45ddfaa95c9c977ee7674ff5755353c3792a38608640406126","urls":["bzz-raw://8a60f10547e9d25e96e516406f16a35ce075dd4db79b7dccd92f90224c9f23b4","dweb:/ipfs/QmcC3jpNmo7kT1oU8taPuZRjcWh88J3d4rv3hYsQKRVBwW"],"license":"MIT"},"lib/erc7579-implementation/src/lib/ModeLib.sol":{"keccak256":"0x02ce0fc8805d1427841f32e2335157e3fae18e99d5c49ba46d53e12fcd1a5185","urls":["bzz-raw://9900d0dfb593b136a058a16f1817f60d5096c3eca6adea662381e12c241b14b4","dweb:/ipfs/QmdsfLLtfzY9oEpZxk1Ve1PLuPQdphZcNK92L6mHa8n1h7"],"license":"MIT"},"src/enforcers/CaveatEnforcer.sol":{"keccak256":"0xe6e44a3dfcb667fba89d7dc73ba06327add01a9ef4ecd11f3627d97e337041d5","urls":["bzz-raw://79988dc7b56022300549c6ede1c7075fdcadb308191e0ece4f85f94f69036bb5","dweb:/ipfs/QmRG1q4NFfo6RpoVWMdK3679eLg2fUru4dUESwCcmxzvoz"],"license":"MIT AND Apache-2.0"},"src/enforcers/ExactExecutionEnforcer.sol":{"keccak256":"0x06914cfe3e7df2abfa6c27a15411e443af826590e07d601059dac8b7105f8ea9","urls":["bzz-raw://556ef6219fd2bc6a261b536cafdcafd7a104121b3dd837ff3c4ea3933d5bf282","dweb:/ipfs/QmcjvnHwq7EFctnmK9LLFt6Rbd26SHax5vYJoDM4LpeixS"],"license":"MIT AND Apache-2.0"},"src/interfaces/ICaveatEnforcer.sol":{"keccak256":"0x61c2d69cb8cc4b04d5ce786ff1b38c07009a262b64900e58a109239942bfad16","urls":["bzz-raw://a67f09f1229e703574dff9103daafa494e90e22577691f180ecfc2c3f50a3ecc","dweb:/ipfs/QmVFXq8mx2PMkgMLoh3pTyQqkH9umwRUjKXtjeZscktf79"],"license":"MIT AND Apache-2.0"},"src/utils/Constants.sol":{"keccak256":"0x5f1e2913a96b7f88bc7fbd2de329465822ae0d438ff212883c6dd3bd5e9609a5","urls":["bzz-raw://51a750792520aaf10cb246112d5554bb33007edd8be97b78e90be9847d663978","dweb:/ipfs/QmbQSZGNeG9f8DNVbCEo1SGRoJU4fQJwQfUHrzQNayFWNs"],"license":"MIT AND Apache-2.0"},"src/utils/Types.sol":{"keccak256":"0xda4094eb4839087157f34750fb4d1a2d6241fbb8ee0d41fd1f2905209e6a05b0","urls":["bzz-raw://1fab0d416245579b01d908ffb607f41ace7b103c1c6a3b9d0f8b32f29ac46247","dweb:/ipfs/QmfDWFbdCEkvaKnPpZmDPtxYVBxHt2XA2zY9jon9Jm7pFf"],"license":"MIT AND Apache-2.0"}},"version":1},"id":75}