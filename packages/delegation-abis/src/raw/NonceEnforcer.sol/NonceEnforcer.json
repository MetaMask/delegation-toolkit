{"abi":[{"type":"function","name":"afterAllHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"afterHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"beforeAllHook","inputs":[{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"beforeHook","inputs":[{"name":"_terms","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"_mode","type":"bytes32","internalType":"ModeCode"},{"name":"","type":"bytes","internalType":"bytes"},{"name":"","type":"bytes32","internalType":"bytes32"},{"name":"_delegator","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"currentNonce","inputs":[{"name":"delegationManager","type":"address","internalType":"address"},{"name":"delegator","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTermsInfo","inputs":[{"name":"_terms","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"nonce_","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"incrementNonce","inputs":[{"name":"_delegationManager","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"UsedNonce","inputs":[{"name":"delegationManager","type":"address","indexed":true,"internalType":"address"},{"name":"delegator","type":"address","indexed":true,"internalType":"address"},{"name":"nonce","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x608060405234801561001057600080fd5b5061050e806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b99deb0e1161005b578063b99deb0e146100eb578063d3eddcc5146100bc578063ed463367146100bc578063f5743c4c146100fe57600080fd5b80632bd4ed2114610082578063414c3e33146100bc578063a145832a146100d8575b600080fd5b6100aa610090366004610314565b600060208181529281526040808220909352908152205481565b60405190815260200160405180910390f35b6100d66100ca366004610390565b50505050505050505050565b005b6100d66100e6366004610390565b610111565b6100aa6100f936600461045d565b61020f565b6100d661010c36600461049f565b61027d565b85600881901b6101228160006102e1565b6101815760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b50600061018e8c8c61020f565b336000908152602081815260408083206001600160a01b038916845290915290205490915081146102015760405162461bcd60e51b815260206004820152601b60248201527f4e6f6e6365456e666f726365723a696e76616c69642d6e6f6e636500000000006044820152606401610178565b505050505050505050505050565b60006020821461026c5760405162461bcd60e51b815260206004820152602260248201527f4e6f6e6365456e666f726365723a696e76616c69642d7465726d732d6c656e676044820152610e8d60f31b6064820152608401610178565b61027682846104ba565b9392505050565b6001600160a01b038116600081815260208181526040808320338085529083529281902080546001810190915590518181529093917fe02d340254c92bc3ad96f0fceb790db939e11c669c1f4c8a549d248f17130b33910160405180910390a35050565b6001600160f81b0319828116908216145b92915050565b80356001600160a01b038116811461030f57600080fd5b919050565b6000806040838503121561032757600080fd5b610330836102f8565b915061033e602084016102f8565b90509250929050565b60008083601f84011261035957600080fd5b50813567ffffffffffffffff81111561037157600080fd5b60208301915083602082850101111561038957600080fd5b9250929050565b60008060008060008060008060008060e08b8d0312156103af57600080fd5b8a3567ffffffffffffffff808211156103c757600080fd5b6103d38e838f01610347565b909c509a5060208d01359150808211156103ec57600080fd5b6103f88e838f01610347565b909a50985060408d0135975060608d013591508082111561041857600080fd5b506104258d828e01610347565b90965094505060808b0135925061043e60a08c016102f8565b915061044c60c08c016102f8565b90509295989b9194979a5092959850565b6000806020838503121561047057600080fd5b823567ffffffffffffffff81111561048757600080fd5b61049385828601610347565b90969095509350505050565b6000602082840312156104b157600080fd5b610276826102f8565b803560208310156102f257600019602084900360031b1b169291505056fea26469706673582212205626dd2329dbdfa25ba379781a5be6c8fc6ae0eb3a22e9122f5d8207bb7de74564736f6c63430008170033","sourceMap":"494:2044:85:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b99deb0e1161005b578063b99deb0e146100eb578063d3eddcc5146100bc578063ed463367146100bc578063f5743c4c146100fe57600080fd5b80632bd4ed2114610082578063414c3e33146100bc578063a145832a146100d8575b600080fd5b6100aa610090366004610314565b600060208181529281526040808220909352908152205481565b60405190815260200160405180910390f35b6100d66100ca366004610390565b50505050505050505050565b005b6100d66100e6366004610390565b610111565b6100aa6100f936600461045d565b61020f565b6100d661010c36600461049f565b61027d565b85600881901b6101228160006102e1565b6101815760405162461bcd60e51b815260206004820152602560248201527f436176656174456e666f726365723a696e76616c69642d657865637574696f6e6044820152642d7479706560d81b60648201526084015b60405180910390fd5b50600061018e8c8c61020f565b336000908152602081815260408083206001600160a01b038916845290915290205490915081146102015760405162461bcd60e51b815260206004820152601b60248201527f4e6f6e6365456e666f726365723a696e76616c69642d6e6f6e636500000000006044820152606401610178565b505050505050505050505050565b60006020821461026c5760405162461bcd60e51b815260206004820152602260248201527f4e6f6e6365456e666f726365723a696e76616c69642d7465726d732d6c656e676044820152610e8d60f31b6064820152608401610178565b61027682846104ba565b9392505050565b6001600160a01b038116600081815260208181526040808320338085529083529281902080546001810190915590518181529093917fe02d340254c92bc3ad96f0fceb790db939e11c669c1f4c8a549d248f17130b33910160405180910390a35050565b6001600160f81b0319828116908216145b92915050565b80356001600160a01b038116811461030f57600080fd5b919050565b6000806040838503121561032757600080fd5b610330836102f8565b915061033e602084016102f8565b90509250929050565b60008083601f84011261035957600080fd5b50813567ffffffffffffffff81111561037157600080fd5b60208301915083602082850101111561038957600080fd5b9250929050565b60008060008060008060008060008060e08b8d0312156103af57600080fd5b8a3567ffffffffffffffff808211156103c757600080fd5b6103d38e838f01610347565b909c509a5060208d01359150808211156103ec57600080fd5b6103f88e838f01610347565b909a50985060408d0135975060608d013591508082111561041857600080fd5b506104258d828e01610347565b90965094505060808b0135925061043e60a08c016102f8565b915061044c60c08c016102f8565b90509295989b9194979a5092959850565b6000806020838503121561047057600080fd5b823567ffffffffffffffff81111561048757600080fd5b61049385828601610347565b90969095509350505050565b6000602082840312156104b157600080fd5b610276826102f8565b803560208310156102f257600019602084900360031b1b169291505056fea26469706673582212205626dd2329dbdfa25ba379781a5be6c8fc6ae0eb3a22e9122f5d8207bb7de74564736f6c63430008170033","sourceMap":"494:2044:85:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:101;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;603:25:111;;;591:2;576:18;598:101:85;;;;;;;614:126:63;;;;;;:::i;:::-;;;;;;;;;;;;;;1137:430:85;;;;;;:::i;:::-;;:::i;1779:208::-;;;;;;:::i;:::-;;:::i;2272:264::-;;;;;;:::i;:::-;;:::i;1137:430::-;1406:5;4155:1:16;4151:12;;;2014:29:63;4151:12:16;1954:18:63;2014:29;:::i;:::-;2006:79;;;;-1:-1:-1;;;2006:79:63;;3124:2:111;2006:79:63;;;3106:21:111;3163:2;3143:18;;;3136:30;3202:34;3182:18;;;3175:62;-1:-1:-1;;;3253:18:111;;;3246:35;3298:19;;2006:79:63;;;;;;;;;1937:159;1427:14:85::1;1444:20;1457:6;;1444:12;:20::i;:::-;1495:10;1482:12;:24:::0;;;::::1;::::0;;;;;;;-1:-1:-1;;;;;1482:36:85;::::1;::::0;;;;;;;;1427:37;;-1:-1:-1;1482:46:85;::::1;1474:86;;;::::0;-1:-1:-1;;;1474:86:85;;3530:2:111;1474:86:85::1;::::0;::::1;3512:21:111::0;3569:2;3549:18;;;3542:30;3608:29;3588:18;;;3581:57;3655:18;;1474:86:85::1;3328:351:111::0;1474:86:85::1;1417:150;1137:430:::0;;;;;;;;;;;:::o;1779:208::-;1845:14;1896:2;1879:19;;1871:66;;;;-1:-1:-1;;;1871:66:85;;3886:2:111;1871:66:85;;;3868:21:111;3925:2;3905:18;;;3898:30;3964:34;3944:18;;;3937:62;-1:-1:-1;;;4015:18:111;;;4008:32;4057:19;;1871:66:85;3684:398:111;1871:66:85;1964:15;1972:6;;1964:15;:::i;:::-;1956:24;1779:208;-1:-1:-1;;;1779:208:85:o;2272:264::-;-1:-1:-1;;;;;2406:32:85;;2343:17;2406:32;;;;;;;;;;;2439:10;2406:44;;;;;;;;;;:46;;;;;;;;2477:52;;603:25:111;;;2406:46:85;;:32;2477:52;;576:18:111;2477:52:85;;;;;;;2333:203;2272:264;:::o;5426:120:16:-;-1:-1:-1;;;;;;5503:40:16;;;;;;;5426:120;;;;;:::o;14:173:111:-;82:20;;-1:-1:-1;;;;;131:31:111;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;639:347::-;690:8;700:6;754:3;747:4;739:6;735:17;731:27;721:55;;772:1;769;762:12;721:55;-1:-1:-1;795:20:111;;838:18;827:30;;824:50;;;870:1;867;860:12;824:50;907:4;899:6;895:17;883:29;;959:3;952:4;943:6;935;931:19;927:30;924:39;921:59;;;976:1;973;966:12;921:59;639:347;;;;;:::o;991:1321::-;1166:6;1174;1182;1190;1198;1206;1214;1222;1230;1238;1291:3;1279:9;1270:7;1266:23;1262:33;1259:53;;;1308:1;1305;1298:12;1259:53;1348:9;1335:23;1377:18;1418:2;1410:6;1407:14;1404:34;;;1434:1;1431;1424:12;1404:34;1473:58;1523:7;1514:6;1503:9;1499:22;1473:58;:::i;:::-;1550:8;;-1:-1:-1;1447:84:111;-1:-1:-1;1638:2:111;1623:18;;1610:32;;-1:-1:-1;1654:16:111;;;1651:36;;;1683:1;1680;1673:12;1651:36;1722:60;1774:7;1763:8;1752:9;1748:24;1722:60;:::i;:::-;1801:8;;-1:-1:-1;1696:86:111;-1:-1:-1;1883:2:111;1868:18;;1855:32;;-1:-1:-1;1940:2:111;1925:18;;1912:32;;-1:-1:-1;1956:16:111;;;1953:36;;;1985:1;1982;1975:12;1953:36;;2024:60;2076:7;2065:8;2054:9;2050:24;2024:60;:::i;:::-;2103:8;;-1:-1:-1;1998:86:111;-1:-1:-1;;2185:3:111;2170:19;;2157:33;;-1:-1:-1;2209:39:111;2243:3;2228:19;;2209:39;:::i;:::-;2199:49;;2267:39;2301:3;2290:9;2286:19;2267:39;:::i;:::-;2257:49;;991:1321;;;;;;;;;;;;;:::o;2317:409::-;2387:6;2395;2448:2;2436:9;2427:7;2423:23;2419:32;2416:52;;;2464:1;2461;2454:12;2416:52;2504:9;2491:23;2537:18;2529:6;2526:30;2523:50;;;2569:1;2566;2559:12;2523:50;2608:58;2658:7;2649:6;2638:9;2634:22;2608:58;:::i;:::-;2685:8;;2582:84;;-1:-1:-1;2317:409:111;-1:-1:-1;;;;2317:409:111:o;2731:186::-;2790:6;2843:2;2831:9;2822:7;2818:23;2814:32;2811:52;;;2859:1;2856;2849:12;2811:52;2882:29;2901:9;2882:29;:::i;4087:255::-;4207:19;;4246:2;4238:11;;4235:101;;;-1:-1:-1;;4307:2:111;4303:12;;;4300:1;4296:20;4292:33;4281:45;4087:255;;;;:::o","linkReferences":{}},"methodIdentifiers":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"ed463367","afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"d3eddcc5","beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"414c3e33","beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":"a145832a","currentNonce(address,address)":"2bd4ed21","getTermsInfo(bytes)":"b99deb0e","incrementNonce(address)":"f5743c4c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegationManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"UsedNonce\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"afterAllHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"afterHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beforeAllHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_terms\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"ModeCode\",\"name\":\"_mode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_delegator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beforeHook\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegationManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"}],\"name\":\"currentNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_terms\",\"type\":\"bytes\"}],\"name\":\"getTermsInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce_\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegationManager\",\"type\":\"address\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract extends the CaveatEnforcer contract. It provides functionality to add an nonce to a delegation and enable multi delegation revocation based on that nonce by incrementing the current nonce.This enforcer operates only in default execution mode.\",\"kind\":\"dev\",\"methods\":{\"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"details\":\"This function MUST revert if the conditions are not met.\",\"params\":{\"_args\":\"An optional input parameter set by the redeemer at time of invocation.\",\"_delegationHash\":\"The hash of the delegation.\",\"_delegator\":\"The address of the delegator.\",\"_executionCalldata\":\"The data representing the execution.\",\"_mode\":\"The mode of execution for the executionCalldata.\",\"_redeemer\":\"The address that is redeeming the delegation.\",\"_terms\":\"The terms to enforce set by the delegator.\"}},\"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"params\":{\"_mode\":\"The execution mode. (Must be Default execType)\"}},\"getTermsInfo(bytes)\":{\"params\":{\"_terms\":\"encoded data that is used during the execution hooks.\"},\"returns\":{\"nonce_\":\"The ID used in the delegation.\"}},\"incrementNonce(address)\":{\"details\":\"The message sender must be the delegator.\",\"params\":{\"_delegationManager\":\"the address of the delegation manager that the user is using.\"}}},\"title\":\"Nonce Enforcer Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions after all actions in a batch redemption process have been executed.\"},\"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions after the execution tied to a specific delegation in the redemption process.\"},\"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"Enforces conditions before any actions in a batch redemption process begin.\"},\"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)\":{\"notice\":\"@param _terms A uint256 representing the nonce used in the delegation.\"},\"getTermsInfo(bytes)\":{\"notice\":\"Decodes the terms used in this CaveatEnforcer.\"},\"incrementNonce(address)\":{\"notice\":\"Increments the nonce of a delegator. This invalidates all previous delegations with the old nonce.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/enforcers/NonceEnforcer.sol\":\"NonceEnforcer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@FCL/=lib/FCL/solidity/src/\",\":@SCL/=lib/SCL/src/\",\":@account-abstraction/=lib/account-abstraction/contracts/\",\":@bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":@erc7579/=lib/erc7579-implementation/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solidity-stringutils/=lib/solidity-stringutils/src/\",\":@solidity/=lib/SCL/src/\",\":FCL/=lib/FCL/solidity/src/\",\":SCL/=lib/SCL/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc7579-implementation/=lib/erc7579-implementation/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/\",\":solady/=lib/erc7579-implementation/node_modules/solady/src/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\"]},\"sources\":{\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/erc7579-implementation/src/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0x08368aba5f1bb83eb57e9f8d31a04edee4be69159b4844a6443f65100917011c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://789244f53fb8b25f4bacb8ac0b9c2f5ea2067a9c5c7bd13fd00e10618e52e2ff\",\"dweb:/ipfs/QmVSbGSyDpfL6UfyvaMBQHmV9u52wway1h3caJnvXVgkvn\"]},\"lib/erc7579-implementation/src/lib/ModeLib.sol\":{\"keccak256\":\"0x02ce0fc8805d1427841f32e2335157e3fae18e99d5c49ba46d53e12fcd1a5185\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9900d0dfb593b136a058a16f1817f60d5096c3eca6adea662381e12c241b14b4\",\"dweb:/ipfs/QmdsfLLtfzY9oEpZxk1Ve1PLuPQdphZcNK92L6mHa8n1h7\"]},\"src/enforcers/CaveatEnforcer.sol\":{\"keccak256\":\"0xe6e44a3dfcb667fba89d7dc73ba06327add01a9ef4ecd11f3627d97e337041d5\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://79988dc7b56022300549c6ede1c7075fdcadb308191e0ece4f85f94f69036bb5\",\"dweb:/ipfs/QmRG1q4NFfo6RpoVWMdK3679eLg2fUru4dUESwCcmxzvoz\"]},\"src/enforcers/NonceEnforcer.sol\":{\"keccak256\":\"0xbcee5a5bf911f94179e00e477f23f6d582251692f116ae6f2ff18d6c90464bf7\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://371d53a8af5b90570737827c15c8fd85f8c1b1369a67e9492de06059e4854f63\",\"dweb:/ipfs/QmQEbefEszeabNaMivaAVeytSQsKQWwN4STDo2p3AKvq6C\"]},\"src/interfaces/ICaveatEnforcer.sol\":{\"keccak256\":\"0x61c2d69cb8cc4b04d5ce786ff1b38c07009a262b64900e58a109239942bfad16\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://a67f09f1229e703574dff9103daafa494e90e22577691f180ecfc2c3f50a3ecc\",\"dweb:/ipfs/QmVFXq8mx2PMkgMLoh3pTyQqkH9umwRUjKXtjeZscktf79\"]},\"src/utils/Constants.sol\":{\"keccak256\":\"0x5f1e2913a96b7f88bc7fbd2de329465822ae0d438ff212883c6dd3bd5e9609a5\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://51a750792520aaf10cb246112d5554bb33007edd8be97b78e90be9847d663978\",\"dweb:/ipfs/QmbQSZGNeG9f8DNVbCEo1SGRoJU4fQJwQfUHrzQNayFWNs\"]},\"src/utils/Types.sol\":{\"keccak256\":\"0xda4094eb4839087157f34750fb4d1a2d6241fbb8ee0d41fd1f2905209e6a05b0\",\"license\":\"MIT AND Apache-2.0\",\"urls\":[\"bzz-raw://1fab0d416245579b01d908ffb607f41ace7b103c1c6a3b9d0f8b32f29ac46247\",\"dweb:/ipfs/QmfDWFbdCEkvaKnPpZmDPtxYVBxHt2XA2zY9jon9Jm7pFf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"delegationManager","type":"address","indexed":true},{"internalType":"address","name":"delegator","type":"address","indexed":true},{"internalType":"uint256","name":"nonce","type":"uint256","indexed":false}],"type":"event","name":"UsedNonce","anonymous":false},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"afterAllHook"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"afterHook"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"beforeAllHook"},{"inputs":[{"internalType":"bytes","name":"_terms","type":"bytes"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"ModeCode","name":"_mode","type":"bytes32"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"_delegator","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"beforeHook"},{"inputs":[{"internalType":"address","name":"delegationManager","type":"address"},{"internalType":"address","name":"delegator","type":"address"}],"stateMutability":"view","type":"function","name":"currentNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"_terms","type":"bytes"}],"stateMutability":"pure","type":"function","name":"getTermsInfo","outputs":[{"internalType":"uint256","name":"nonce_","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_delegationManager","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"incrementNonce"}],"devdoc":{"kind":"dev","methods":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"details":"This function MUST revert if the conditions are not met.","params":{"_args":"An optional input parameter set by the redeemer at time of invocation.","_delegationHash":"The hash of the delegation.","_delegator":"The address of the delegator.","_executionCalldata":"The data representing the execution.","_mode":"The mode of execution for the executionCalldata.","_redeemer":"The address that is redeeming the delegation.","_terms":"The terms to enforce set by the delegator."}},"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"params":{"_mode":"The execution mode. (Must be Default execType)"}},"getTermsInfo(bytes)":{"params":{"_terms":"encoded data that is used during the execution hooks."},"returns":{"nonce_":"The ID used in the delegation."}},"incrementNonce(address)":{"details":"The message sender must be the delegator.","params":{"_delegationManager":"the address of the delegation manager that the user is using."}}},"version":1},"userdoc":{"kind":"user","methods":{"afterAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions after all actions in a batch redemption process have been executed."},"afterHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions after the execution tied to a specific delegation in the redemption process."},"beforeAllHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"Enforces conditions before any actions in a batch redemption process begin."},"beforeHook(bytes,bytes,bytes32,bytes,bytes32,address,address)":{"notice":"@param _terms A uint256 representing the nonce used in the delegation."},"getTermsInfo(bytes)":{"notice":"Decodes the terms used in this CaveatEnforcer."},"incrementNonce(address)":{"notice":"Increments the nonce of a delegator. This invalidates all previous delegations with the old nonce."}},"version":1}},"settings":{"remappings":["@FCL/=lib/FCL/solidity/src/","@SCL/=lib/SCL/src/","@account-abstraction/=lib/account-abstraction/contracts/","@bytes-utils/=lib/solidity-bytes-utils/contracts/","@erc7579/=lib/erc7579-implementation/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@solidity-stringutils/=lib/solidity-stringutils/src/","@solidity/=lib/SCL/src/","FCL/=lib/FCL/solidity/src/","SCL/=lib/SCL/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","erc7579-implementation/=lib/erc7579-implementation/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/","solady/=lib/erc7579-implementation/node_modules/solady/src/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-stringutils/=lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/enforcers/NonceEnforcer.sol":"NonceEnforcer"},"evmVersion":"london","libraries":{}},"sources":{"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"lib/erc7579-implementation/src/interfaces/IERC7579Account.sol":{"keccak256":"0x08368aba5f1bb83eb57e9f8d31a04edee4be69159b4844a6443f65100917011c","urls":["bzz-raw://789244f53fb8b25f4bacb8ac0b9c2f5ea2067a9c5c7bd13fd00e10618e52e2ff","dweb:/ipfs/QmVSbGSyDpfL6UfyvaMBQHmV9u52wway1h3caJnvXVgkvn"],"license":"MIT"},"lib/erc7579-implementation/src/lib/ModeLib.sol":{"keccak256":"0x02ce0fc8805d1427841f32e2335157e3fae18e99d5c49ba46d53e12fcd1a5185","urls":["bzz-raw://9900d0dfb593b136a058a16f1817f60d5096c3eca6adea662381e12c241b14b4","dweb:/ipfs/QmdsfLLtfzY9oEpZxk1Ve1PLuPQdphZcNK92L6mHa8n1h7"],"license":"MIT"},"src/enforcers/CaveatEnforcer.sol":{"keccak256":"0xe6e44a3dfcb667fba89d7dc73ba06327add01a9ef4ecd11f3627d97e337041d5","urls":["bzz-raw://79988dc7b56022300549c6ede1c7075fdcadb308191e0ece4f85f94f69036bb5","dweb:/ipfs/QmRG1q4NFfo6RpoVWMdK3679eLg2fUru4dUESwCcmxzvoz"],"license":"MIT AND Apache-2.0"},"src/enforcers/NonceEnforcer.sol":{"keccak256":"0xbcee5a5bf911f94179e00e477f23f6d582251692f116ae6f2ff18d6c90464bf7","urls":["bzz-raw://371d53a8af5b90570737827c15c8fd85f8c1b1369a67e9492de06059e4854f63","dweb:/ipfs/QmQEbefEszeabNaMivaAVeytSQsKQWwN4STDo2p3AKvq6C"],"license":"MIT AND Apache-2.0"},"src/interfaces/ICaveatEnforcer.sol":{"keccak256":"0x61c2d69cb8cc4b04d5ce786ff1b38c07009a262b64900e58a109239942bfad16","urls":["bzz-raw://a67f09f1229e703574dff9103daafa494e90e22577691f180ecfc2c3f50a3ecc","dweb:/ipfs/QmVFXq8mx2PMkgMLoh3pTyQqkH9umwRUjKXtjeZscktf79"],"license":"MIT AND Apache-2.0"},"src/utils/Constants.sol":{"keccak256":"0x5f1e2913a96b7f88bc7fbd2de329465822ae0d438ff212883c6dd3bd5e9609a5","urls":["bzz-raw://51a750792520aaf10cb246112d5554bb33007edd8be97b78e90be9847d663978","dweb:/ipfs/QmbQSZGNeG9f8DNVbCEo1SGRoJU4fQJwQfUHrzQNayFWNs"],"license":"MIT AND Apache-2.0"},"src/utils/Types.sol":{"keccak256":"0xda4094eb4839087157f34750fb4d1a2d6241fbb8ee0d41fd1f2905209e6a05b0","urls":["bzz-raw://1fab0d416245579b01d908ffb607f41ace7b103c1c6a3b9d0f8b32f29ac46247","dweb:/ipfs/QmfDWFbdCEkvaKnPpZmDPtxYVBxHt2XA2zY9jon9Jm7pFf"],"license":"MIT AND Apache-2.0"}},"version":1},"id":85}