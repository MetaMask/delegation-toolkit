{"abi":[{"type":"function","name":"adapters","inputs":[{"name":"id","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IMetaSwap.Adapter","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"selector","type":"bytes4","internalType":"bytes4"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"stateMutability":"view"},{"type":"function","name":"removeAdapter","inputs":[{"name":"aggregatorId","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setAdapter","inputs":[{"name":"aggregatorId","type":"string","internalType":"string"},{"name":"addr","type":"address","internalType":"address"},{"name":"selector","type":"bytes4","internalType":"bytes4"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"swap","inputs":[{"name":"aggregatorId","type":"string","internalType":"string"},{"name":"tokenFrom","type":"address","internalType":"contract IERC20"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"adapters(string)":"b84f5d1e","removeAdapter(string)":"3ef11fd7","setAdapter(string,address,bytes4,bytes)":"459a39fb","swap(string,address,uint256,bytes)":"5f575529"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"name\":\"adapters\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IMetaSwap.Adapter\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"aggregatorId\",\"type\":\"string\"}],\"name\":\"removeAdapter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"aggregatorId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setAdapter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"aggregatorId\",\"type\":\"string\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"removeAdapter(string)\":{\"details\":\"Removes the adapter for an existing aggregator. This can't be undone.\",\"params\":{\"aggregatorId\":\"Aggregator's identifier\"}},\"setAdapter(string,address,bytes4,bytes)\":{\"details\":\"Sets the adapter for an aggregator. It can't be changed later.\",\"params\":{\"addr\":\"Address of the contract that contains the logic for this aggregator\",\"aggregatorId\":\"Aggregator's identifier\",\"data\":\"Fixed abi encoded data the will be passed in each delegatecall made to the adapter\",\"selector\":\"The function selector of the swap function in the adapter\"}},\"swap(string,address,uint256,bytes)\":{\"details\":\"Performs a swap\",\"params\":{\"aggregatorId\":\"Identifier of the aggregator to be used for the swap\",\"data\":\"Dynamic data which is concatenated with the fixed aggregator's data in the delecatecall made to the adapter\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/helpers/interfaces/IMetaSwap.sol\":\"IMetaSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@FCL/=lib/FCL/solidity/src/\",\":@SCL/=lib/SCL/src/\",\":@account-abstraction/=lib/account-abstraction/contracts/\",\":@bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":@erc7579/=lib/erc7579-implementation/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@solidity-stringutils/=lib/solidity-stringutils/src/\",\":@solidity/=lib/SCL/src/\",\":FCL/=lib/FCL/solidity/src/\",\":SCL/=lib/SCL/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc7579-implementation/=lib/erc7579-implementation/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/\",\":solady/=lib/erc7579-implementation/node_modules/solady/src/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"src/helpers/interfaces/IMetaSwap.sol\":{\"keccak256\":\"0x93b356912e2d17d1d078254f37f124726db00610f0c4b4b1db7d192978bf7b58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c516f0c359b6ff49c79c951bc2782dd842eac5c7bac088a0bc1dbf7a0a20b3fe\",\"dweb:/ipfs/QmdxxA2GhYJoFhiTJdGdiGRZadmEWaCR5LcT595m5Dfm6z\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"id","type":"string"}],"stateMutability":"view","type":"function","name":"adapters","outputs":[{"internalType":"struct IMetaSwap.Adapter","name":"","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"},{"internalType":"bytes","name":"data","type":"bytes"}]}]},{"inputs":[{"internalType":"string","name":"aggregatorId","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeAdapter"},{"inputs":[{"internalType":"string","name":"aggregatorId","type":"string"},{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"setAdapter"},{"inputs":[{"internalType":"string","name":"aggregatorId","type":"string"},{"internalType":"contract IERC20","name":"tokenFrom","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"swap"}],"devdoc":{"kind":"dev","methods":{"removeAdapter(string)":{"details":"Removes the adapter for an existing aggregator. This can't be undone.","params":{"aggregatorId":"Aggregator's identifier"}},"setAdapter(string,address,bytes4,bytes)":{"details":"Sets the adapter for an aggregator. It can't be changed later.","params":{"addr":"Address of the contract that contains the logic for this aggregator","aggregatorId":"Aggregator's identifier","data":"Fixed abi encoded data the will be passed in each delegatecall made to the adapter","selector":"The function selector of the swap function in the adapter"}},"swap(string,address,uint256,bytes)":{"details":"Performs a swap","params":{"aggregatorId":"Identifier of the aggregator to be used for the swap","data":"Dynamic data which is concatenated with the fixed aggregator's data in the delecatecall made to the adapter"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@FCL/=lib/FCL/solidity/src/","@SCL/=lib/SCL/src/","@account-abstraction/=lib/account-abstraction/contracts/","@bytes-utils/=lib/solidity-bytes-utils/contracts/","@erc7579/=lib/erc7579-implementation/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-upgradable-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@solidity-stringutils/=lib/solidity-stringutils/src/","@solidity/=lib/SCL/src/","FCL/=lib/FCL/solidity/src/","SCL/=lib/SCL/","account-abstraction/=lib/account-abstraction/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","erc7579-implementation/=lib/erc7579-implementation/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","sentinellist/=lib/erc7579-implementation/node_modules/@rhinestone/sentinellist/src/","solady/=lib/erc7579-implementation/node_modules/solady/src/","solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/","solidity-stringutils/=lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/helpers/interfaces/IMetaSwap.sol":"IMetaSwap"},"evmVersion":"london","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"src/helpers/interfaces/IMetaSwap.sol":{"keccak256":"0x93b356912e2d17d1d078254f37f124726db00610f0c4b4b1db7d192978bf7b58","urls":["bzz-raw://c516f0c359b6ff49c79c951bc2782dd842eac5c7bac088a0bc1dbf7a0a20b3fe","dweb:/ipfs/QmdxxA2GhYJoFhiTJdGdiGRZadmEWaCR5LcT595m5Dfm6z"],"license":"MIT"}},"version":1},"id":92}