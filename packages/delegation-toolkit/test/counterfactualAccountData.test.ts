import { expect, describe, it } from 'vitest';

import { Implementation } from '../src/constants';
import { getCounterfactualAccountData } from '../src/counterfactualAccountData';

describe('getCounterfactualAccountData', () => {
  const factory = '0xfD9261637e09DD3c58643cDecC64A75EA235bBe8';
  const implementations = {
    HybridDeleGatorImpl: '0x4Ec9f3fDaBCA7b4588f6C0bA94464De12Bbd2E22',
    MultiSigDeleGatorImpl: '0xa8F73EC8374b6fF40712AF6C21D1e79e1a5186aa',
  } as const;
  const deploySalt =
    '0x11a8b2a8c7cf03cd3ef899b0e934306bff980bdb10a1d9e84c7598253fee9bcf';
  const ownerAddress = '0x72ec0f88409247ebf9dc04a3521e5162d90cab1e';

  it('should generate correct counterfactual account data for Hybrid implementation', async () => {
    const result = await getCounterfactualAccountData({
      factory,
      implementations,
      implementation: Implementation.Hybrid,
      deployParams: [ownerAddress, [], [], []],
      deploySalt,
    });

    expect(result.address).toMatchInlineSnapshot(
      `"0x81968F4538215C31588587aC0D1761D74B7D7a4f"`,
    );
    expect(result.factoryData).toMatchInlineSnapshot(
      `"0x4af63f02000000000000000000000000000000000000000000000000000000000000004011a8b2a8c7cf03cd3ef899b0e934306bff980bdb10a1d9e84c7598253fee9bcf000000000000000000000000000000000000000000000000000000000000055060806040526040516103f03803806103f08339810160408190526100229161025e565b61002c8282610033565b5050610341565b61003c82610091565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561008557610080828261010c565b505050565b61008d61017f565b5050565b806001600160a01b03163b5f036100cb57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101289190610326565b5f60405180830381855af49150503d805f8114610160576040519150601f19603f3d011682016040523d82523d5f602084013e610165565b606091505b5090925090506101768583836101a0565b95945050505050565b341561019e5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101b5576101b0826101ff565b6101f8565b81511580156101cc57506001600160a01b0384163b155b156101f557604051639996b31560e01b81526001600160a01b03851660048201526024016100c2565b50805b9392505050565b80511561020f5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561025657818101518382015260200161023e565b50505f910152565b5f806040838503121561026f575f80fd5b82516001600160a01b0381168114610285575f80fd5b60208401519092506001600160401b03808211156102a1575f80fd5b818501915085601f8301126102b4575f80fd5b8151818111156102c6576102c6610228565b604051601f8201601f19908116603f011681019083821181831017156102ee576102ee610228565b81604052828152886020848701011115610306575f80fd5b61031783602083016020880161023c565b80955050505050509250929050565b5f825161033781846020870161023c565b9190910192915050565b60a38061034d5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220fd2cc92935c943d341edacaf5318a0b9ab0185ce62ef72e95ab393ef358730c464736f6c634300081700330000000000000000000000004ec9f3fdabca7b4588f6c0ba94464de12bbd2e22000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e48ebf953300000000000000000000000072ec0f88409247ebf9dc04a3521e5162d90cab1e000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"`,
    );
  });

  it('should generate correct counterfactual account data for MultiSig implementation', async () => {
    const result = await getCounterfactualAccountData({
      factory,
      implementations,
      implementation: Implementation.MultiSig,
      deployParams: [[ownerAddress], 1n],
      deploySalt,
    });

    expect(result.address).toMatchInlineSnapshot(
      `"0xde24A5d01Dd75320a9A3bFDcBe437d03A9164CaA"`,
    );
    expect(result.factoryData).toMatchInlineSnapshot(
      `"0x4af63f02000000000000000000000000000000000000000000000000000000000000004011a8b2a8c7cf03cd3ef899b0e934306bff980bdb10a1d9e84c7598253fee9bcf00000000000000000000000000000000000000000000000000000000000004f060806040526040516103f03803806103f08339810160408190526100229161025e565b61002c8282610033565b5050610341565b61003c82610091565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561008557610080828261010c565b505050565b61008d61017f565b5050565b806001600160a01b03163b5f036100cb57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101289190610326565b5f60405180830381855af49150503d805f8114610160576040519150601f19603f3d011682016040523d82523d5f602084013e610165565b606091505b5090925090506101768583836101a0565b95945050505050565b341561019e5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101b5576101b0826101ff565b6101f8565b81511580156101cc57506001600160a01b0384163b155b156101f557604051639996b31560e01b81526001600160a01b03851660048201526024016100c2565b50805b9392505050565b80511561020f5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561025657818101518382015260200161023e565b50505f910152565b5f806040838503121561026f575f80fd5b82516001600160a01b0381168114610285575f80fd5b60208401519092506001600160401b03808211156102a1575f80fd5b818501915085601f8301126102b4575f80fd5b8151818111156102c6576102c6610228565b604051601f8201601f19908116603f011681019083821181831017156102ee576102ee610228565b81604052828152886020848701011115610306575f80fd5b61031783602083016020880161023c565b80955050505050509250929050565b5f825161033781846020870161023c565b9190910192915050565b60a38061034d5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220fd2cc92935c943d341edacaf5318a0b9ab0185ce62ef72e95ab393ef358730c464736f6c63430008170033000000000000000000000000a8f73ec8374b6ff40712af6c21d1e79e1a5186aa0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008460b5bb3f00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000072ec0f88409247ebf9dc04a3521e5162d90cab1e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"`,
    );
  });

  it('should throw an error for unsupported implementation', async () => {
    await expect(
      getCounterfactualAccountData({
        factory,
        implementations,
        implementation: 99 as any as Implementation,
        deployParams: [ownerAddress, [], [], []],
        deploySalt,
      }),
    ).rejects.toThrow("Implementation type '99' not supported");
  });

  it('should throw an error for Stateless7702 implementation (not supported for counterfactual accounts)', async () => {
    await expect(
      getCounterfactualAccountData({
        factory,
        implementations,
        implementation: Implementation.Stateless7702,
        deployParams: null,
        deploySalt,
      } as any),
    ).rejects.toThrow("Implementation type 'Stateless7702' not supported");
  });
});
